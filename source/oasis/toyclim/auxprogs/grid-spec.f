      program CLIME
      
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      COMMON/BLANK/SIGMA(NL),SIGMAH(NL),P(NLD),FILT(0:NMAX),RSQ(0:NMAX)
     : ,H1,MGDM,JGDM,JGDM2,DLONG,SI(JGD),CS(JGD),RCS(JGD),RCS2(JGD),NPC1
     : ,DAMPT(NL),DLATT,P0,GA,GASCON,CV,CT,WW,CPP,FKAP,RADEA,RNTAPE
     : ,DSIGMA(NL),FINC(2),PPTOP,ECCMTN,CLTMTN,HTMTN,WNMTN,IPLTYP
     : ,IECMWF
     : ,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LZONAL,LOROG,LOROGR,LSTORM,LGPO(NLD),LUTF,LHEATS,LPREP,LSTEKE
      LOGICAL LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
     : ,LZONAL,LPREP,LFORS,LFORSH
      COMMON/GRIDP/SP(MGD,JGD),GS(MGD,JGD)
     
      COMMON/LEGAU/DALP(MJP,JGD),ALP(MJP,JGD),JI,CSJ,SIT,NFPA(NMAX)
      COMMON/SPECTR/ES(IGA)
      COMPLEX US,VS,TS,ES
      COMMON/EXTRAP/EXN1,EXN2,EXS1,EXS2
      COMMON/WORK1/GAV(JGD,NLG),RGG(NLG*NLG),WKS1(NLG),WKS((MGD+2)*NL),
     : WORK(64*(MGD+1)),TRIG((3*MGD/2)+1)


C     PROGRAM TO CALCULATE CLIMATE  COEFFS FOR ANY NUMBER OF LEVELS
C
      CALL INITAL
      NGRID=MGD*JGD
C
C read in gridpoint field to be transformed to spectral space      
C
      open(59,file='t21.59')
      rewind(59)
      read(59,*)gs
      close(59)
C
C Setup utf 
C
      IF(LUTF)THEN
         CALL INIUTF('VCLIM2 '//' VER.1.3',65)
      endif
C
C Call to orography transformation subroutine
C
      IF(LOROGR)CALL OROGR
      IF(LUTF)THEN
         CALL ENDUTF(65)
      endif
      return
      END
      SUBROUTINE PRZNT(GIN,MGD,JGD,NLD,TITLE,LSIGMA,NPC1,GAV,ISYM,FINC)
C
C     PRINTS FIELDS AT ALL LEVELS AND ZONAL MEANS
C     AUTOMATICALLY SCALES GRID VALUES
C
C     GIN(MGD,JGD,NLD) CONTAINS GRID POINT FIELD TO BE PRINTED
C     GAV(JGD,NLD) WORKSPACE FOR ZONAL AVERAGES
C     MGD=NUMBER OF LONGITUDE POINTS
C     JGD=NUMBER OF LATITUDE POINTS
C     NLD=NUMBER OF VERTICAL LEVELS
C     TITLE = CHARACTER TITLE OF OUTPUT
C     LSIGMA=.T. IF FIELDS ON A SIGMA SURFACE
C           =.F. IF FIELDS ON A PRESSURE SURFACE
C     NPC1=CHANNEL FOR OUTPUT
C
C
      CHARACTER TITLE*(*)
      LOGICAL LSIGMA
      REAL GIN(MGD,JGD,NLD),GAV(JGD,NLD),FINC(2)
C
 1000 FORMAT(1X,I4,30I4)
C
      JGH=(JGD+1)/2
      IGIN=NLD*JGD*MGD
      RMG=1./MGD
      AMAX=-1000.
      JMAX=-1000
      LMAX=-1000
      MMAX=-1000
      IF(ISYM.GE.0)THEN
        DO 10 L=1,NLD
        DO 10 J=1,JGH
        DO 10 I=1,MGD
        IF(ABS(GIN(I,J,L)).LT.AMAX)GO TO 10
        AMAX=ABS(GIN(I,J,L))
        MMAX=I
        JMAX=J
        LMAX=L
   10   CONTINUE
      ENDIF
      IF(ISYM.LE.0)THEN
        DO 11 L=1,NLD
        DO 11 J=JGH,JGD
        DO 11 I=1,MGD
        IF(ABS(GIN(I,J,L)).LT.AMAX)GO TO 11
        AMAX=ABS(GIN(I,J,L))
        MMAX=I
        JMAX=J
        LMAX=L
   11   CONTINUE
      ENDIF
      GINMAX=GIN(MMAX,JMAX,LMAX)
      PRINT*,' MAXIMUM ',TITLE,' FIELD = ',GINMAX
      PRINT*,' AT LONG, LATITUDE, LEVEL I,J,L = ',MMAX,JMAX,LMAX
      IF(GINMAX.NE.0.)THEN
        RLGIN=ALOG10(ABS(GINMAX))
        LGIN=NINT(RLGIN)
        IF((LGIN-RLGIN).LT.0.)LGIN=LGIN+1
        SCALE=10.**(3-LGIN)
        WRITE(NPC1,*)' ALL FIELDS MULTIPLIED BY ',SCALE
        DO 1 L=1,NLD
        IF(LSIGMA)THEN
          WRITE(NPC1,*)TITLE,' FIELD ON SIGMA LEVEL NUMBER ',L
        ELSE
          WRITE(NPC1,*)TITLE,' FIELD ON PRESSURE LEVEL NUMBER ',L
        ENDIF
        IF(ISYM.GE.0)THEN
          WRITE(NPC1,*)' N-POLE TO EQUATOR '
          DO 2 I=1,MGD
    2     WRITE(NPC1,1000)I,(NINT(SCALE*GIN(I,J,L)),J=1,JGH)
        ENDIF
        IF(ISYM.LE.0)THEN
          WRITE(NPC1,*)' EQUATOR TO S-POLE '
          DO 3 I=1,MGD
    3     WRITE(NPC1,1000)I,(NINT(SCALE*GIN(I,J,L)),J=JGH,JGD)
        ENDIF
        DO 4 J=1,JGD
    4   GAV(J,L)=RMG*SSUM(MGD,GIN(1,J,L),1)
    1   CONTINUE
        WRITE(NPC1,*)' ZONAL MEAN ',TITLE,' FIELD '
        IF(NPC1.NE.2)WRITE(2,*)' ZONAL MEAN ',TITLE,' FIELD, SCALE= ',
     :   SCALE
        IF(ISYM.GE.0)THEN
          WRITE(NPC1,*)' N-POLE TO EQUATOR '
          IF(NPC1.NE.2)WRITE(2,*)' N-POLE TO EQUATOR'
          DO 5 L=1,NLD
          IF(NPC1.NE.2)WRITE(2,1000)L,(NINT(SCALE*GAV(J,L)),J=1,JGH)
    5     WRITE(NPC1,1000)L,(NINT(SCALE*GAV(J,L)),J=1,JGH)
        ENDIF
        IF(ISYM.LE.0)THEN
          WRITE(NPC1,*)' EQUATOR TO S-POLE '
          IF(NPC1.NE.2)WRITE(2,*)' EQUATOR TO S-POLE '
          DO 6 L=1,NLD
          IF(NPC1.NE.2)WRITE(2,1000)L,(NINT(SCALE*GAV(J,L)),J=JGH,JGD)
 6        WRITE(NPC1,1000)L,(NINT(SCALE*GAV(J,L)),J=JGH,JGD)
          ENDIF
      ELSE
        WRITE(NPC1,*)TITLE,' FIELD IS IDENTICALLY ZERO'
        IF(NPC1.NE.2)WRITE(2,*)TITLE,' FIELD IS IDENTICALLY ZERO'
      ENDIF
      IF(FINC(1).LE.0..OR.FINC(2).LE.0.)THEN
        FINC(1)=10.*NINT(AMAX*SCALE/100.)/SCALE
        FINC(2)=FINC(1)
      ENDIF
      CALL FILMM(GIN,GAV,NLD,TITLE,LSIGMA,FINC)
      RETURN
      END

      SUBROUTINE INITAL
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      COMMON/BLANK/SIGMA(NL),SIGMAH(NL),P(NLD),FILT(0:NMAX),RSQ(0:NMAX)
     : ,H1,MGDM,JGDM,JGDM2,DLONG,SI(JGD),CS(JGD),RCS(JGD),RCS2(JGD),NPC1
     : ,DAMPT(NL),DLATT,P0,GA,GASCON,CV,CT,WW,CPP,FKAP,RADEA,RNTAPE
     : ,DSIGMA(NL),FINC(2),PPTOP,ECCMTN,CLTMTN,HTMTN,WNMTN,IPLTYP
     : ,IECMWF
     : ,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LZONAL,LOROG,LOROGR,LSTORM,LGPO(NLD),LUTF,LHEATS,LPREP,LSTEKE
      LOGICAL LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
     : ,LZONAL,LPREP,LFORS,LFORSH
      COMMON/GRIDP/SP(MGD,JGD),GS(MGD,JGD)
     
      COMMON/EXTRAP/EXN1,EXN2,EXS1,EXS2


      DATA P/0.007,0.03,0.05,0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.7,0.85,1./
      NAMELIST/INPB/NPC1,MFIL,AFIL,DAMPT,PPTOP,IECMWF
     :,RNTAPE,IPLTYP,LZONAL,LPREP
     :,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
C
C
 209  FORMAT(/,' INTEGRATION WITH',I3,' LEVELS IN THE VERTICAL (NL=',I3
     :,')')
 210  FORMAT(/' RHOMBOIDAL TRUNCATION WITH NN=',I3,I8,' MODES FOR EACH
     :ZONAL WAVENUMBER')
 223  FORMAT(/' TRIANGULAR TRUNCATION AT TOTAL WAVENUMBER (NN) =',I3,
     :' , DIFFERENT NUMBER OF MODES FOR EACH ZONAL WAVENUMBER')
 214  FORMAT(/,' VALUES OF SIGMA AT FULL LEVELS')
C
C
C
      IF(NL.GT.64)PRINT*,' WARNING: FFT MIGHT NOT PRODUCE CORRECT
     : RESULT '
      IF(MOCT.NE.1)PRINT*,' MOCT.NE.1. NOT PROPERLY IMPLIMENTED
     : CHECK IROM AND OROG OPTIONS '
      IPLTYP=4
      RNTAPE=0.
      PPTOP=0.007
      IECMWF=0
      LZONAL=.FALSE.
      LPREP=.FALSE.
      LBASIC=.FALSE.
      LHEAT1=.FALSE.
      LHEAT2=.FALSE.
      LFORC1=.FALSE.
      LFORC2=.FALSE.
      LFORH1=.FALSE.
      LFORH2=.FALSE.
      LFORS=.FALSE.
      LOROG=.FALSE.
      LFORSH=.FALSE.
      LOROGR=.TRUE.
      LSTORM=.FALSE.
      LUTF=.TRUE.
      LHEATS=.FALSE.
      LSTEKE=.FALSE.
      DO 9959 L=1,NLD
9959  LGPO(L)=.FALSE.
      ECCMTN=0.25
      CLTMTN=45.
      WNMTN=6.*SQRT(2.)
      HTMTN=4000.
      P0=1.0E5
      GA=9.81
      GASCON=287.0
      H1=GA/GASCON
      RADEA=6371000.0
      WW=7.292E-5
      CPP=1004.0
      FKAP=GASCON/CPP
      DO 100 L=1,NL
  100 DAMPT(L)=0.
c     READ(7,INPB)
      NPC1=99
      WRITE(NPC1,INPB)
      WRITE(NPC1,209)NL,NL
      IF(IROM.EQ.1)WRITE(NPC1,210)NN,NN
      IF(IROM.EQ.0)WRITE(NPC1,223)NN
C
C Filter strengths
C
c     
      afil=0.8601203464973843
      mfil=NN
      WRITE(NPC1,*)' HOSKINS STYLE FILTER SET UP  '
      WRITE(NPC1,*)' WITH AFIL = ',AFIL,' MFIL = ',MFIL
      IF(NPC1.NE.2)THEN
        WRITE(2,INPB)
        WRITE(2,209)NL,NL
        IF(IROM.EQ.1)WRITE(2,210)NN,NN
        IF(IROM.EQ.0)WRITE(2,223)NN
        WRITE(2,*)' HOSKINS STYLE FILTER SET UP  '
        WRITE(2,*)' WITH AFIL = ',AFIL,' MFIL = ',MFIL
      ENDIF
C     ISYM DEFINES WHETHER SPECTRAL COEFF ARE TO BE GLOBAL (ISYM=0)
C     HEMISPHERIC, USING NORTHERN HEMISPHERE TEMPERATURES (ISYM=0)
C     OR HEMISPHERIC, USING SOUTHERN  HEMISPHERE TEMPERATURES (ISYM=-1)
      IF(IABS(ISYM).GT.1)PRINT *,' WARNING ISYM NOT PROPERLY DEFINED,
     : GLOBAL IS ASSUMED '
C
      CV=RADEA*WW
      CG=CV*CV
      CT=CG/GASCON
      STP=1.0/NL
      PP=0.0
      NLM=NL-1
      IF(NL.GT.5)GO TO 22
      DO 23 L=1,NLM
 23   SIGMAH(L)=L*STP
      GO TO 24
 22   T1=(.9375/.94-1.25)/(.9375*(SQRT(.9375)-1.0))
      T2=4.0+T1
      DO 25 L=1,NLM
      PP=PP+STP
 25   SIGMAH(L)=PP*(2.0-PP)*(1.0+0.25*SIN(PI2*(PP**.6)))/(5.0-T2*PP
     1+T1*(PP**1.5))
 24   CONTINUE
      S1=0.
      DO 60 L=1,NLM
      S2=SIGMAH(L)
      DSIGMA(L)=S2-S1
      SIGMA(L)=0.5*(S2+S1)
   60 S1=S2
      DSIGMA(NL)=1.-SIGMAH(NLM)
      SIGMA(NL)=0.5*(1.+SIGMAH(NLM))
      P(1)=PPTOP
      WRITE(NPC1,214)
      WRITE(NPC1,213)(SIGMA(L),L=1,NL)
      IF(NPC1.NE.2)THEN
        WRITE(2,214)
        WRITE(2,213)(SIGMA(L),L=1,NL)
       ENDIF
  213 FORMAT(1X,15F8.4)
C     CALCULATE FILTER WEIGHTS
    
     
      IF(AFIL.NE.0.)THEN
        DO 1 N=0,NMAX
    1   FILT(N)=0.
        FK=-ALOG(AFIL)/((MFIL*(MFIL+1))**2)
        DO 2 N=0,MIN(NMAX,MFIL)
    2   FILT(N)=EXP(-FK*N*N*(N+1)*(N+1))
      ELSE
        DO 3 N=0,NMAX
    3   FILT(N)=1.
      ENDIF
      RSQ(0)=0.
      DO 4 N=1,NMAX
    4 RSQ(N)=-1./(N*N+N)
C
      JGDM=JGD-1
      JGDM2=JGDM-1
      MGDM=MGD-1
      DLONG=PI2/MGD
      

      DO 10 I=1,JGD/2
      CALL GWTLT(SIT,WEIGHT,I,JGD/2)
c      ALAT=asin(SIT)
c      print*,alat*180/pi
      si(i)=sit
      cs(i)=sqrt(1.-sit*sit)
      RCS(I)=1./CS(I)
      RCS2(I)=RCS(I)*RCS(I)
   10 CONTINUE
      
      si(JGD/2+1)=0
c      alat=asin(si(jgd/2+1))
c      print*,alat
      cs(jgd/2+1)=1.
      rcs(jgd/2+1)=1.
      rcs(jgd/2+1)=1.
      do 20 i=jgd/2+2,jgd
      si(i)=-si(jgd+1-i)
      cs(i)=-cs(jgd+1-i)
c      alat=asin(si(i))
c      print*,alat*180/pi
      rcs(i)=1./cs(i)
      rcs2(i)=rcs(i)*rcs(i)
   20 CONTINUE
      EXN1=(SI(3)-SI(1))/(SI(3)-SI(2))
      EXN2=(SI(2)-SI(1))/(SI(3)-SI(2))
      EXS1=(SI(JGDM2)-SI(JGD))/(SI(JGDM2)-SI(JGDM))
      EXS2=(SI(JGDM)-SI(JGD))/(SI(JGDM2)-SI(JGDM))
      DO 101 J=1,JGD
      DO 101 I=1,MGD
  101 GS(I,J)=0.
      print*, 'calling lsq'
      CALL LSQ(GS,1,-1.,.FALSE.,TS,.FALSE.,-1,-1)
      RETURN
      END

      SUBROUTINE SYMM(GIN,MGS,JGS,NLS,ISYM,ASYM)
      REAL GIN(MGS,JGS,NLS)
      IF(ISYM.EQ.0)RETURN
      JGSH=(JGS-1)/2
      JGSP=JGS+1
      IF(ISYM.EQ.1)THEN
      DO 1 L=1,NLS
      DO 1 J=1,JGSH
      DO 1 I=1,MGS
    1 GIN(I,JGSP-J,L)=ASYM*GIN(I,J,L)
      ELSE
      DO 2 L=1,NLS
      DO 2 J=1,JGSH
      DO 2 I=1,MGS
    2 GIN(I,J,L)=ASYM*GIN(I,JGSP-J,L)
      ENDIF
      IF(ASYM.EQ.-1.)THEN
      DO 3 L=1,NLS
      DO 3 I=1,MGS
    3 GIN(I,JGSH+1,L)=0.
      ENDIF
      RETURN
      END

      SUBROUTINE LSQ(GIN,NFIELD,DIM,LVORT,GS,LSPEC,IPAR,NUN)
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      COMMON/BLANK/SIGMA(NL),SIGMAH(NL),P(NLD),FILT(0:NMAX),RSQ(0:NMAX)
     : ,H1,MGDM,JGDM,JGDM2,DLONG,SI(JGD),CS(JGD),RCS(JGD),RCS2(JGD),NPC1
     : ,DAMPT(NL),DLATT,P0,GA,GASCON,CV,CT,WW,CPP,FKAP,RADEA,RNTAPE
     : ,DSIGMA(NL),FINC(2),PPTOP,ECCMTN,CLTMTN,HTMTN,WNMTN,IPLTYP
     : ,IECMWF
     : ,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LZONAL,LOROG,LOROGR,LSTORM,LGPO(NLD),LUTF,LHEATS,LPREP,LSTEKE
      LOGICAL LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
     : ,LZONAL,LPREP,LFORS,LFORSH
      COMMON/LEGAU/DALP(MJP,JGD),ALP(MJP,JGD),JI,CSJ,SIT,NFPA(NMAX)
      COMPLEX GS(*)
      LOGICAL LSPEC,LVORT
      REAL GIN(MGD,JGD,NFIELD)
      DIMENSION H(MGD),AU(JGDNMAX),TM(NMAX2)
     :,WKS(NMAX2),FJ1(MGD2),ipiv(nmax2)
      COMPLEX TEMP,HGP(JGD),SPH(NMAX),PMNRE(JGDNMAX)
      REWIND 30
      RDIM=1./ABS(DIM)
      II=0
      DO 1 MP=1,MM
      II=II+1
    1 NFPA(II)=(1-IROM)*NN+IROM*(MP+1+(J2Z-1)*2)
      NFPA(1)=NN
      JGDH=JGD/2
      RM=1./MGD
      DO 500 JI=1,JGD
      CSJ=CS(JI)*CS(JI)
      SIT=SI(JI)
  500 CALL LGNDRE
      IIS=0
      DO 550 M=1,MFP
      IF(M.EQ.1.AND.LVORT)IIS=IIS+1
      IPI=0
      JJ=0
      NMODE=(((MM-M)/2)*2+2)*(1-IROM)+IROM*2*J2Z
      IF(M.EQ.1.AND.LVORT)NMODE=NMODE-1
      DO 560 J=1,JGD
      II=IIS
      DO 560 K=1,NMODE
      JJ=JJ+1
      II=II+1
  560 AU(JJ)=ALP(II,J)
      IIS=IIS+NMODE
      II=0
      DO 510 J=1,NMODE
      DO 510 K=1,NMODE
      II=II+1
      TM(II)=0.
      IJ=J
      IK=K
      DO 508 JK=1,JGD
      TM(II)=TM(II)+AU(IJ)*AU(IK)
      IJ=IJ+NMODE
      IK=IK+NMODE
  508 CONTINUE
  510 CONTINUE
      CALL MINV(TM,NMODE,NMODE,WKS,DET,0.,0,1,ipiv)
      II=0
      DO 515 K=1,NMODE
      DO 515 J=1,JGD
      CS1=1.
      IK=NMODE*(K-1)
      IJ=NMODE*(J-1)
      IPI=IPI+1
      PMNRE(IPI)=0.
      DO 514 JK=1,NMODE
      IJ=IJ+1
      IK=IK+1
  514 PMNRE(IPI)=PMNRE(IPI)+CS1*TM(IK)*AU(IJ)
  515 PMNRE(IPI)=PMNRE(IPI)*RM
      NMJGD=NMODE*JGD
      WRITE(30)(PMNRE(IJK),IJK=1,NMJGD)
  550 CONTINUE
      Y=0.
      DO 505 I=1,MGD
      FJ1(I)=-SIN(Y)
      FJ1(I+MGD)=COS(Y)
  505 Y=Y+DLONG
      DO 850 L=1,NFIELD
      II=(L-1)*IGA
      IF(DIM.GT.0.)WRITE(NPC1,*)' FIELD ',L
      REWIND 30
      DO 850 M=1,MFP
      IJ=0
      MMM=M-1
      IF(DIM.GT.0.)WRITE(NPC1,851)MMM
  851 FORMAT(1X,'ZONAL WAVENUMBER ',I2)
      DO 810 J=1,JGD
      HGP(J)=0.
      DO 200 I=1,MGD
  200 H(I)=GIN(I,J,L)*RDIM
      DO 810 I=1,MGD
      JJ1=MOD((M-1)*(I-1),MGD)+1
      HGP(J)=HGP(J)+H(I)*CMPLX(FJ1(JJ1+MGD),FJ1(JJ1))
  810 CONTINUE
      NMODE=(((MM-M)/2)*2+2)*(1-IROM)+IROM*2*J2Z
      IF(M.EQ.1.AND.LVORT)THEN
      NMJGD=(NMODE-1)*JGD
      JST=2
      SPH(1)=0.
      ELSE
      NMJGD=NMODE*JGD
      JST=1
      ENDIF
      READ(30)(PMNRE(IJK),IJK=1,NMJGD)
      DO 820 J=JST,NMODE
      SPH(J)=0.
      DO 815 JJ=1,JGD
      IJ=IJ+1
  815 SPH(J)=SPH(J)+PMNRE(IJ)*HGP(JJ)
  820 CONTINUE
      IF(IPAR.EQ.0)THEN
C     SWAP AROUND ORDER OF COEFFICIENTS
      DO 860 I=1,NMODE,2
      TEMP=SPH(I)
      SPH(I)=SPH(I+1)
      SPH(I+1)=TEMP
  860 CONTINUE
      ENDIF
      IF(DIM.GT.0.)WRITE(NPC1,825)(SPH(J),J=1,NMODE,2),
     :  (SPH(J),J=2,NMODE,2)
  825 FORMAT(1X,8(1X,E14.8))
      IF(IABS(ISYM).EQ.1)THEN
      IF(NUN.GT.0)WRITE(NUN,'(1P,4E14.6)')(SPH(I),I=1,NMODE,2)
      ELSE
      IF(NUN.GT.0)WRITE(NUN,'(1P,4E14.6)')(SPH(I),I=1,NMODE,2),(SPH(J),
     : J=2,NMODE,2)
      ENDIF
      IF(LSPEC)THEN
      IS=II
      DO 900 I=1,NMODE,2
      IS=IS+1
  900 GS(IS)=SPH(I)
      IF(IABS(ISYM).NE.1)THEN
      IS=II+NWJ2
      DO 901 I=2,NMODE,2
      IS=IS+1
  901 GS(IS)=SPH(I)
      ENDIF
      II=II+NMODE/2
      ENDIF
  850 CONTINUE
      RETURN
      END

      SUBROUTINE WTOG(GS,IGB,GRID,MG,JG,NL,NN,MM,MOCT,NHEM,IROM,IPAR,
     :DIM,ALP,WKS,WORK,TRIG)
      COMPLEX GS(IGB)
      REAL ALP(2*IGB/NHEM/NL,JG),GRID(MG,JG,NL),WKS((MG+2)*NL)
      DIMENSION IFAX(10),WORK(64*(MG+1)),TRIG((3*MG)/2+1)
C
C
      NTWG=NL
      CALL SET99(TRIG,IFAX,MG)
      MGPP=MG+2
      IGA=IGB/NL
      NWJ2=IGA/NHEM
      J2Z=1+(NN-1)/2
      DO 100 IH=1,JG
c
      DO 200 I=1,MGPP*NL
  200 WKS(I)=0.
c
      DO 10 IHEM=1,NHEM
      DO 10 L=1,NL
      IM=(L-1)*MGPP
      I=(L-1)*IGA+(IHEM-1)*NWJ2
      IO=-(IHEM-2)*IPAR+(1-IHEM)*(1+IPAR)
      DO 10 MP=1,MM,MOCT
      IM=IM+2
      NFP=(1-IROM)*NN+IROM*(MP+1+(J2Z-1)*2)
      DO 10 IN=MP,NFP,2
      IO=IO+2
      I=I+1
      WKS(IM)=WKS(IM)+ALP(IO,IH)*AIMAG(GS(I))
   10 WKS(IM-1)=WKS(IM-1)+ALP(IO,IH)*REAL(GS(I))
c
      CALL FFT991(WKS(1),WORK,TRIG,IFAX,1,MGPP,MG,NTWG,1)
c
      DO 43 L=1,NL
      II=(L-1)*MGPP
      DO 43 M=1,MG
      II=II+1
      GRID(M,IH,L)=WKS(II)*DIM
   43 CONTINUE
  100 CONTINUE
      RETURN
      END

      SUBROUTINE LGNDRE
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
C
      COMMON/LEGAU/DALP(MJP,JGD),ALP(MJP,JGD),JI,CSJ,SIT,NFPA(NMAX)
      LM=2
      ALP(1,JI)=SQRT(.5)
      F1M=SQRT(1.5)
      ALP(2,JI)=F1M*SIT
      DALP(1,JI)=0.
      II=0
      DO 1 M1=1,MM
      M=M1-1
      AM=M
      A2M=M+M
      E2=SQRT(A2M+3.)
      IF(M.EQ.0)GOTO 3
      F2M=-F1M*SQRT(CSJ/A2M)
      F1M=F2M*E2
      IF(M.NE.MMO)GOTO 1
      LM=LM+1
      ALP(LM,JI)=F2M
      LM=LM+1
      ALP(LM,JI)=F1M*SIT
      DALP(LM-1,JI)=-AM*ALP(LM,JI)/E2
    3 M2=M+2
      MMO=M+1
      II=II+1
      JFM=((NFPA(II)-M1)/2)*2+M2-1
      IF(JFM.LT.M2)GO TO 5
      K=LM-M2+1
      AMSQ=AM*AM
      DO 4 N=M2,JFM
      AN=N
      AN2=N*N
      ANM2=(N-1)*(N-1)
      E1=SQRT((ANM2-AMSQ)/(4.*ANM2-1.))
      E2=SQRT((4.*AN2-1.)/(AN2-AMSQ))
      ALP(K+N,JI)=E2*(SIT*ALP(K+N-1,JI)-E1*ALP(K+N-2,JI))
      DALP(K+N-1,JI)=(1.-AN)*ALP(K+N,JI)/E2+AN*E1*ALP(K+N-2,JI)
    4 CONTINUE
      LM=LM+JFM-M2+1
 5    CONTINUE
      DALP(LM,JI)=-AN*SIT*ALP(LM,JI)+(AN+AN+1.)*ALP(LM-1,JI)/E2
    1 CONTINUE
      RETURN
      END

      SUBROUTINE ZERO(GIN,MGS,JGS,NLS,M1,M2,J1,J2,L1,L2)
      REAL GIN(MGS,JGS,NLS)
      IF(L1.NE.1)THEN
      DO 1 L=1,L1-1
      DO 1 J=1,JGS
      DO 1 I=1,MGS
    1 GIN(I,J,L)=0.
      DO 2 J=1,JGS
      DO 2 I=1,MGS
    2 GIN(I,J,L1)=0.5*GIN(I,J,L1)
      ENDIF
      IF(L2.LT.NLS)THEN
      DO 3 L=L2+1,NLS
      DO 3 J=1,JGS
      DO 3 I=1,MGS
    3 GIN(I,J,L)=0.
      DO 4 J=1,JGS
      DO 4 I=1,MGS
    4 GIN(I,J,L2)=0.5*GIN(I,J,L2)
      ENDIF
      IF(J1.NE.1)THEN
      DO 5 L=L1,L2
      DO 5 J=1,J1-1
      DO 5 I=1,MGS
    5 GIN(I,J,L)=0.
      DO 6 L=L1,L2
      DO 6 I=1,MGS
    6 GIN(I,J1,L)=0.5*GIN(I,J1,L)
      ENDIF
      IF(J2.LT.JGS)THEN
      DO 7 L=L1,L2
      DO 7 J=J2+1,JGS
      DO 7 I=1,MGS
    7 GIN(I,J,L)=0.
      DO 8 L=L1,L2
      DO 8 I=1,MGS
    8 GIN(I,J2,L)=0.5*GIN(I,J2,L)
      ENDIF
      IF(M1.LT.M2)THEN
      IF(M1.NE.1.OR.M2.NE.MGS)THEN
      IF(M1.NE.1)THEN
      DO 9 L=L1,L2
      DO 9 J=J1,J2
      DO 9 I=1,M1-1
    9 GIN(I,J,L)=0.
      ENDIF
      DO 10 L=L1,L2
      DO 10 J=J1,J2
   10 GIN(M1,J,L)=0.5*GIN(M1,J,L)
      IF(M2.NE.MGS)THEN
      DO 11 L=L1,L2
      DO 11 J=J1,J2
      DO 11 I=M2+1,MGS
   11 GIN(I,J,L)=0.
      ENDIF
      DO 12 L=L1,L2
      DO 12 J=J1,J2
   12 GIN(M2,J,L)=0.5*GIN(M2,J,L)
      ENDIF
      ELSE
      IF(M2.NE.1.OR.M1.NE.MGS)THEN
      DO 13 L=L1,L2
      DO 13 J=J1,J2
      DO 13 I=M2+1,M1-1
   13 GIN(I,J,L)=0.
      DO 14 L=L1,L2
      DO 14 J=J1,J2
      GIN(M1,J,L)=0.5*GIN(M1,J,L)
   14 GIN(M2,J,L)=0.5*GIN(M2,J,L)
      ENDIF
      ENDIF
      RETURN
      END

      SUBROUTINE FILMM(GIN,GAV,NLS,TITLE,LSIGMA,FINC1)
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      COMMON/BLANK/SIGMA(NL),SIGMAH(NL),P(NLD),FILT(0:NMAX),RSQ(0:NMAX)
     : ,H1,MGDM,JGDM,JGDM2,DLONG,SI(JGD),CS(JGD),RCS(JGD),RCS2(JGD),NPC1
     : ,DAMPT(NL),DLATT,P0,GA,GASCON,CV,CT,WW,CPP,FKAP,RADEA,RNTAPE
     : ,DSIGMA(NL),FINC(2),PPTOP,ECCMTN,CLTMTN,HTMTN,WNMTN,IPLTYP
     : ,IECMWF
     : ,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LZONAL,LOROG,LOROGR,LSTORM,LGPO(NLD),LUTF,LHEATS,LPREP,LSTEKE
      LOGICAL LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
     : ,LZONAL,LPREP,LFORS,LFORSH
      REAL FINC1(2)
      REAL GIN(MGD,JGD,NLS),GAV(JGD,NLS)
      LOGICAL LSIGMA
      CHARACTER TITLE*(*)
      REAL GPR(MGD+1,JGD),GAVT(NLG*JGD)
      CHARACTER LTITLE*50
      IF(LUTF)THEN
         LTITLE=TITLE
         DO 26 L=1,NLS
         IF(LGPO(L).OR.NLS.EQ.1)THEN
            DO 25 J=1,JGD
            DO 27 I=1,MGD
27          GPR(I,J)=GIN(I,J,L)
25          GPR(MGD+1,J)=GPR(1,J)
            IX=MGD+1
            IY=JGD
            FIN=FINC1(1)
            IF(NLS.NE.1)WRITE(LTITLE(45:50),'(F6.4)')P(L)
            CALL MAXMIN(GPR,IX*IY,FMIN,FMAX)
            CALL WTFUTF(GPR,IX,IY,IPLTYP,0,0,2,1,0,
     :           FMIN,FMAX,FIN,0.0,LTITLE,50,65,IFAIL)
         ENDIF
26       CONTINUE
         IF(NLS.EQ.NLD)THEN
            J1=1
            J2=(JGD+1)/2
            IF(ISYM.EQ.0)THEN
               J2=JGD
            ELSEIF(ISYM.LT.0)THEN
               J1=J2
            ENDIF
            LTITLE=TITLE
            IX=J2
            IY=NLS
            NMASK=0
            FIN=FINC1(2)
            JJ=0
            DO 200 L=1,NLS
            DO 200 J=J1,J1+J2-1
            JJ=JJ+1
            GAVT(JJ)=GAV(J,L)
200         CONTINUE
            CALL MAXMIN(GAVT,IX*IY,FMIN,FMAX)
            CALL WTFUTF(GAVT,IX,IY,11,0,0,2,1,0,
     :              FMIN,FMAX,FIN,0.0,LTITLE,50,65,IFAIL)
         ENDIF
      ENDIF
      RETURN
      END


      SUBROUTINE OROGR
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      COMMON/GRIDP/SP(MGD,JGD),GS(MGD,JGD)
     
      COMMON/SPECTR/ES(IGA)
      COMPLEX US,VS,TS,ES
      COMMON/BLANK/SIGMA(NL),SIGMAH(NL),P(NLD),FILT(0:NMAX),RSQ(0:NMAX)
     : ,H1,MGDM,JGDM,JGDM2,DLONG,SI(JGD),CS(JGD),RCS(JGD),RCS2(JGD),NPC1
     : ,DAMPT(NL),DLATT,P0,GA,GASCON,CV,CT,WW,CPP,FKAP,RADEA,RNTAPE
     : ,DSIGMA(NL),FINC(2),PPTOP,ECCMTN,CLTMTN,HTMTN,WNMTN,IPLTYP
     : ,IECMWF
     : ,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LZONAL,LOROG,LOROGR,LSTORM,LGPO(NLD),LUTF,LHEATS,LPREP,LSTEKE
      LOGICAL LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
     : ,LZONAL,LPREP,LFORS,LFORSH
      COMMON/WORK1/GAV(JGD,NLG),RGG(NLG*NLG),WKS1(NLG),WKS((MGD+2)*NL),
     : WORK(64*(MGD+1)),TRIG((3*MGD/2)+1)
      COMMON/LEGAU/DALP(MJP,JGD),ALP(MJP,JGD),JI,CSJ,SIT,NFPA(NMAX)
      DIMM=CV*CV/GA
      DO 20 J=1,JGD
      DO 20 I=1,MGD
20    SP(I,J)=GS(I,J)
C
C Transform to spectral space
C
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
C
C Apply Hoskins style orographic filter
C
      CALL FILTER(ES,FILT,NN,MM,MOCT,1,2,-1,'OROG FILT')
C
C Write out all orography spectral coeff to channel 50
C this is non- dimensional
C
      write(50,*)ES
      call flush(50)
      close(50)
C
C Transform back to gridpoint space for utf output
C
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
      FINC(1)=500.0
      FINC(2)=200.0     
      CALL PRZNT(SP,MGD,JGD,1,' ALL OROG ',.TRUE.,NPC1,GAV,ISYM,FINC)

      IF(JGD.GE.0) RETURN
      DO 1 J=1,JGD
      DO 1 I=1,MGD
    1 SP(I,J)=GS(I,J)
C     I  56.28,135.00=21,59  J 43.25,15.35=17,27
C     I  56.28,135.00=21,59  J 65.58,15.35=9,27
C     I  56.28,136.00=21,59  J 65.58,43.25=9,17
      CALL ZERO(SP,MGD,JGD,1,21,59,9,17,1,1)
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
      CALL FILTER(ES,FILT,NN,MM,MOCT,1,2,-1,'OROG FILT')
      write(31)ES
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
     
      FINC(1)=500.
      FINC(2)=200.
      CALL PRZNT(SP,MGD,JGD,1,'  TIBET  ',.TRUE.,NPC1,GAV,ISYM,FINC)
      IF (JGD.GE.0) RETURN	
      DO 2 J=1,JGD
      DO 2 I=1,MGD
    2 SP(I,J)=GS(I,J)
C     I  200,270=41,55  J 70,15=5,16
      CALL ZERO(SP,MGD,JGD,1,41,55,5,16,1,1)
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DMM,.FALSE.,ES,.TRUE.,-1,21)
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
      
      FINC(1)=500.
      CALL PRZNT(SP,MGD,JGD,1,' ROCKIES ',.TRUE.,NPC1,GAV,ISYM,FINC)
      DO 3 J=1,JGD
      DO 3 I=1,MGD
    3 SP(I,J)=GS(I,J)
C     I  290,350=59,71  J 85,60=2,7
      CALL ZERO(SP,MGD,JGD,1,59,71,2,7,1,1)
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
      
      FINC(1)=500.
      CALL PRZNT(SP,MGD,JGD,1,' GREENLD ',.TRUE.,NPC1,GAV,ISYM,FINC)
      DO 4 J=1,JGD
      DO 4 I=1,MGD
    4 SP(I,J)=GS(I,J)
C     I  270,325=55,66  J 10,-45=17,28
      CALL ZERO(SP,MGD,JGD,1,55,66,17,28,1,1)
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
      
      FINC(1)=500.
      CALL PRZNT(SP,MGD,JGD,1,' ANDES   ',.TRUE.,NPC1,GAV,ISYM,FINC)
      DO 5 J=1,JGD
      DO 5 I=1,MGD
    5 SP(I,J)=GS(I,J)
C     I  0,355=1,72  J -60,-90=31,37
      CALL ZERO(SP,MGD,JGD,1,1,72,31,37,1,1)
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
     



      FINC(1)=500.
      CALL PRZNT(SP,MGD,JGD,1,'ANTARTIC',.TRUE.,NPC1,GAV,ISYM,FINC)
      DO 6 J=1,JGD
      DO 6 I=1,MGD
    6 SP(I,J)=GS(I,J)
C     I  0,60=1,13  J 35,-40=12,27
      CALL ZERO(SP,MGD,JGD,1,1,13,12,27,1,1)
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
      CALL WTOG(ES,IGA,SP,MGD,JGD,1,NN,MM,MOCT,NHEM,IROM,-1,DIMM,
     : ALP,WKS,WORK,TRIG)
      
      FINC(1)=500.
      CALL PRZNT(SP,MGD,JGD,1,' S.AFRICA ',.TRUE.,NPC1,GAV,ISYM,FINC)
C
C     NOW DO RESIDUAL
C
      
      CALL SYMM(SP,MGD,JGD,1,ISYM,1.0)
      CALL LSQ(SP,1,DIMM,.FALSE.,ES,.TRUE.,-1,21)
      RETURN
      END
                 

            
      SUBROUTINE WTFUTF(G,IX,IY,IPTYP,ICSTYL,IFDTYP,ILVTYP,IFRAME,IMSK
     :                 ,FMIN,FMAX,GINC,DAY,NAME,NCHAR,NCHAN,IFAIL)
C
C     UGAMP TRANSFER FILE, VERSION 1.3.
C     ROUTINE TO WRITE A DATA FIELD TO THE FILE.
C
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      PARAMETER(IALEN=(MGD+1)*JGD)
C
      COMMON/CMCUTF/ASCARR(2,IALEN)
     :,LHDR,LDAT,LEND,LHT1,LHT2,LFT1,LFT2D,LFT2T
      CHARACTER*1  ASCARR
      CHARACTER*21 LHDR,LDAT,LEND
      CHARACTER*50 LHT1,LHT2,LFT1,LFT2D,LFT2T
C
      COMMON/CMIUTF/IHR1(15),IFR3(15)
C
      REAL G(IX*IY)
      CHARACTER NAME*(*)
C
 2900 FORMAT(/' ***WTFUTF : ',A,' NOT DUMPED : LENGTH OF ASCARR'
     :       ' (IALEN) MUST BE INCREASED FROM',I5,' TO',I5)
 2910 FORMAT(/' ***WTFUTF : WARNING : ',A,' HAS ZERO RANGE')
C
C     CHECK SIZE OF DATA ARRAY.
C
      NXY=IX*IY
      IF (NXY.GT.IALEN) THEN
         WRITE(2,2900) NAME,IALEN,NXY
         IFAIL=1
         RETURN
      ENDIF
C
C     CALCULATE MINIMUM AND MAXIMUM VALUES OF FIELD IF INPUT VALUES
C     ARE ZERO.
C
      IF (FMIN.EQ.0..AND.FMAX.EQ.0.) THEN
         MX=ISMAX(NXY,G,1)
         GMAX=G(MX)
         MN=ISMIN(NXY,G,1)
         GMIN=G(MN)
      ELSE
         GMIN=FMIN
         GMAX=FMAX
      ENDIF
C
C     CHECK RANGE OF FIELD.
C
      RANGE=GMAX-GMIN
      GAMAX=AMAX1(ABS(GMIN),ABS(GMAX))
      IF (RANGE.LE.GAMAX*1.E-10) THEN
         WRITE(2,2910) NAME
         IFAIL=2
      ENDIF
C
C     SET UP INTEGER SWITCH RECORD.
C
      IFR3(1)=IX
      IFR3(2)=IY
      IFR3(3)=IPTYP
      IFR3(4)=ICSTYL
      IFR3(5)=IFDTYP
      IFR3(6)=ILVTYP
      IFR3(7)=IFRAME
      IFR3(9)=IMSK
C
C     SET UP FIELD TITLE.
C
      WRITE(LFT1,'(50X)')
      INCHAR=MIN0(50,NCHAR)
      WRITE(LFT1(1:INCHAR),'(A)') NAME(1:INCHAR)
C
C     WRITE FIELD HEADER.
C
      WRITE(NCHAN,'(A50,''.'')') LFT1
      IF (DAY.GE.0) THEN
         WRITE(LFT2D(19:28),'(F10.2)') DAY
         WRITE(NCHAN,'(A50,''.'')') LFT2D
      ELSE
         WRITE(NCHAN,'(A50,''.'')') LFT2T
      ENDIF
      WRITE(NCHAN,'(15I5)') (IFR3(I),I=1,15)
      WRITE(NCHAN,'(1P,3E15.7)') GMIN,GMAX,GINC
C
C     PACK AND WRITE DATA.
C
      CALL ASCOUT(G,NXY,ASCARR,GMIN,GMAX,NCHAN)
      IFAIL=0
C
      RETURN
      END
      SUBROUTINE ASCOUT(ARRAY,NPTS,ASCARR,GMIN,GMAX,NCHAN)
C
C     PACK AND WRITE A DATA ARRAY AS A SET OF PAIRS OF CHARACTERS.
C     USES THE CHARACTERS 0-9 AND LOWER AND UPPER CASE A-Z ONLY.
C
C     INPUT ARGUMENTS:
C        ARRAY   -    REAL DATA ARRAY.
C        NPTS    -    DIMENSION OF ARRAY.
C        ASCARR  -    A CHARACTER*1 WORKSPACE ARRAY OF LENGTH 2*NPTS.
C        GMIN    -    MINIMUM VALUE OF ARRAY.
C        GMAX    -    MAXIMUM VALUE OF ARRAY.
C        NCHAN   -    FORTRAN CHANNEL FOR DATA OUTPUT.
C     ARGUMENTS UNCHANGED ON OUTPUT EXCEPT ASCARR CONTAINS CHARACTERS.
C
C     KEVIN DUNN / MIKE BLACKBURN     U.G.A.M.P.   03.01.89.
C     BASED ON CODE BY M. A. ROWE       (FRAM)        09.87.
C
      REAL ARRAY(NPTS)
      CHARACTER*1  ASCARR(2,NPTS), LKUP(63)
      LOGICAL LASCII
      SAVE LKUP
C
C     FIND SCALING FACTOR. SET TO UNITY FOR ZERO FIELD RANGE.
C
      GAMAX=AMAX1(ABS(GMAX),ABS(GMIN))
      RANGE=GMAX-GMIN
      ARANG=62.*62.-1.
      IF (RANGE.LE.GAMAX*1.E-10) THEN
         SCALE=0.
      ELSE
         SCALE=ARANG/RANGE
      ENDIF
C
C     SCALE DATA USING RANGE OF FIELD AND ENCODE EACH VALUE
C     USING SUBSCRIPT OF LOOK-UP TABLE CHARACTER.
C
      DO 10 N=1,NPTS
      INTEG=NINT((ARRAY(N)-GMIN)*SCALE)
      ICODE1=1+INTEG/62
      ICODE2=1+MOD(INTEG,62)
      ASCARR(1,N)=LKUP(ICODE1)
      ASCARR(2,N)=LKUP(ICODE2)
   10 CONTINUE
C
C     WRITE ENCODED DATA.
C
      WRITE(NCHAN,'(64A1)') ((ASCARR(I,N),I=1,2),N=1,NPTS)
C
      RETURN
C
C*******************
      ENTRY ASCSET
C
C     DEFINE LOOK-UP TABLE OF CHARACTERS.
C     TABLE INCLUDES 0-9 AND LOWER AND UPPER CASE CHARACTERS A-Z
C     BUT NOT CONTROL CHARACTERS. ASCII OR EBCDIC CHARACTER SETS
C     ARE ALLOWED AND TEST MADE TO DETERMINE CURRENT SET.
C     CHARACTERS 1-62 IN LKUP ARE USED TO REPRESENT INTEGER VALUES
C     1-62. THE RANGE OF THE DATA FIELD IS SCALED TO 62*62 AND TWO
C     CHARACTERS USED TO REPRESENT EACH DATUM (2 DIGITS IN BASE 62).
C     63RD CHARACTER IN LKUP IS BLANK FOR POSSIBLE FUTURE MASKING.
C
      LASCII=ICHAR('0').NE.240
      IF (LASCII) THEN
C***  IMPLEMENTATION FOR ASCII CHARACTERS.
      DO 21 I=1,10
   21 LKUP(I)=CHAR(I+47)
      DO 22 I=11,36
   22 LKUP(I)=CHAR(I+54)
      DO 23 I=37,62
   23 LKUP(I)=CHAR(I+60)
      LKUP(63)=CHAR(32)
      ELSE
C***  IMPLEMENTATION FOR EBCDIC CHARACTERS
      DO 31 I=1,10
   31 LKUP(I)=CHAR(I+239)
      DO 32 I=11,19
   32 LKUP(I)=CHAR(I+182)
      DO 33 I=20,28
   33 LKUP(I)=CHAR(I+189)
      DO 34 I=29,36
   34 LKUP(I)=CHAR(I+197)
      DO 35 I=37,45
   35 LKUP(I)=CHAR(I+92)
      DO 36 I=46,54
   36 LKUP(I)=CHAR(I+99)
      DO 37 I=55,62
   37 LKUP(I)=CHAR(I+107)
      LKUP(63)=CHAR(64)
      END IF
      RETURN
C*******************
C
      END
      SUBROUTINE MAXMIN(GPR,IX,FMIN,FMAX)
      REAL GPR(*)
      FMIN=GPR(1)
      FMAX=GPR(1)
      DO 1 I=2,IX
      IF(GPR(I).GT.FMAX)FMAX=GPR(I)
      IF(GPR(I).LT.FMIN)FMIN=GPR(I)
1     CONTINUE
      RETURN
      END
      subroutine minv(a,n,ldab,work,det,tol,m,job,ipiv)
c
c     Bodge substitute for SCILIB routine MINV.
c     Does everything BGCM5 requires of MINV but nothing more.
c     Uses Nag routine F01AAF to invert n x n matrix A and
c     returns A**-1 in A
c
      parameter (nbig=107)
c
      dimension a(n,n),work(*)
      dimension wkspce(nbig),x(nbig,nbig)
      integer ipiv(n)
c
      ifail=0
c      f01aaf superceded by f07adf,f06qff and f07ajf
c     call f01aaf(a,n,n,x,nbig,wkspce,ifail)

      call f07adf(n,n,a,n,ipiv,ifail)
      call f06qff('General',n,n,a,n,x,nbig)
      call f07ajf(n,x,nbig,ipiv,wkspce,nbig,ifail)
c
      do 20 j=1,n
         do 10 i=1,n
            a(i,j)=x(i,j)
 10      continue
 20   continue
c
      return
      end

      INTEGER FUNCTION ISMAX(N,X,INCX)
      real x(n)
      ISMAX =1
      AMAX=X(N)
      DO J=1,N,INCX
         IF(X(J).GT.AMAX) THEN 
            ISMIN=J
            AMAX=X(J)
         ENDIF
      ENDDO
      RETURN
      END
      INTEGER FUNCTION ISMIN(N,X,INCX)
      real x(n)
      ISMIN=1
      AMIN=X(1)
      DO J=1,N,INCX
         IF (X(J).LT.AMIN) THEN
            ISMIN=J
            AMIN=X(J)
         ENDIF
      ENDDO   
      RETURN
      END
      SUBROUTINE INIUTF(NAME,NCHAN)
C
C     UGAMP TRANSFER FILE, VERSION 1.3.
C     INITIALISE COMMON BLOCK VALUES AND WRITE GLOBAL HEADER.
C
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      PARAMETER(IALEN=(MGD+1)*JGD)
C
      COMMON/CMCUTF/ASCARR(2,IALEN)
     :,LHDR,LDAT,LEND,LHT1,LHT2,LFT1,LFT2D,LFT2T
      CHARACTER*1  ASCARR
      CHARACTER*21 LHDR,LDAT,LEND
      CHARACTER*50 LHT1,LHT2,LFT1,LFT2D,LFT2T
C
      COMMON/CMIUTF/IHR1(15),IFR3(15)
C
      COMMON/BLANK/SIGMA(NL),SIGMAH(NL),P(NLD),FILT(0:NMAX),RSQ(0:NMAX)
     : ,H1,MGDM,JGDM,JGDM2,DLONG,SI(JGD),CS(JGD),RCS(JGD),RCS2(JGD),NPC1
     : ,DAMPT(NL),DLATT,P0,GA,GASCON,CV,CT,WW,CPP,FKAP,RADEA,RNTAPE
     : ,DSIGMA(NL),FINC(2),PPTOP,ECCMTN,CLTMTN,HTMTN,WNMTN,IPLTYP
     : ,IECMWF
     : ,LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2,LFORS,LFORSH
     : ,LZONAL,LOROG,LOROGR,LSTORM,LGPO(NLD),LUTF,LHEATS,LPREP,LSTEKE
      LOGICAL LBASIC,LHEAT1,LHEAT2,LFORC1,LFORC2,LFORH1,LFORH2
     : ,LOROG,LOROGR,LSTORM,LGPO,LUTF,LHEATS,LSTEKE
     : ,LZONAL,LPREP,LFORS,LFORSH
      REAL ALOND(MGD),ASIG(NLD),ALAT(JGD)
      INTEGER NAME(2)
C
C     SET UP DATA FOR GLOBAL HEADER.
C
      LHDR='***START OF HEADER***'
      LDAT='***START OF DATA***  '
      LEND='***END OF DATA***    '
C
      DO 10 I=1,15
   10 IHR1(I)=0
      IHR1(1)=MGD
      IHR1(2)=((JGD+1)/2)-1

      IHR1(3)=NLD
      IHR1(4)=NHEM
      IHR1(5)=MOCT
      IF((JGD).EQ.((JGD)/2)*2)THEN
         IHR1(6)=0
      ELSE
         IHR1(6)=0
      ENDIF
      IHR1(8)=MM
      IHR1(9)=NN
      IHR1(10)=NWJ2
     
C
      AOFF=0.0

      DALON=360./FLOAT(MGD)
      DO 20 I=1,MGD
20    ALOND(I)=AOFF+FLOAT(I-1)*DALON
C
      ASIG(1)=1000.*PPTOP
      DO 30 L=2,NLD
   30 ASIG(L)=1000.*P(L)
      do i=1,jgd/2
         alat(i)=(180/pi)*(asin(si(i)))
      enddo
     
      do i =jgd/2+2,jgd
         alat(i-1)=(180/pi)*(asin(si(i)))
      enddo   
      
C

      BEGDAY=0.0
      ENDDAY=0.0
C
C     WRITE GLOBAL HEADER.
C
      WRITE(NCHAN,'(A21,29X,''.'')') LHDR
      WRITE(NCHAN,'(15I5)') (IHR1(I),I=1,15)
      WRITE(NCHAN,'((10F7.2))') (ALOND(I),I=1,MGD)
      WRITE(NCHAN,'((10F7.2))') (ALAT(J),J=1,jgd-1)
      WRITE(NCHAN,'((10F7.1))') (ASIG(L),L=1,NLD)
      WRITE(LHT1,'(''RUN '',F8.3,5X,''DAYS '',F10.2,'' TO'',F10.2,5X)')
     :      RNTAPE,BEGDAY,ENDDAY
      WRITE(NCHAN,'(A50,''.'')') LHT1
      WRITE(LHT2,'(2A8,34X)') (NAME(I),I=1,2)
      WRITE(NCHAN,'(A50,''.'')') LHT2
      WRITE(NCHAN,'(A21,29X,''.'')') LDAT
C
C     INITIALISE FIELD HEADER ARRAYS.
C
      WRITE(LFT1,'(50X)')
      WRITE(LFT2D,'(''RUN '',F8.3,3X,''DAY'',32X)') RNTAPE
      WRITE(LFT2T,'(''RUN '',F8.3,3X,''DAY'',F10.2,'' TO'',F10.2
     :              ,'' AVERAGE '')') RNTAPE,BEGDAY,ENDDAY
      DO 40 I=1,15
   40 IFR3(I)=0
C
C     INITIALISE CHARACTER LOOK-UP TABLE FOR ASCOUT.
C
      CALL ASCSET
C
      RETURN
      END
      SUBROUTINE ENDUTF(NCHAN)
C
C     UGAMP TRANSFER FILE, VERSION 1.3.
C     WRITE END OF DATA RECORD.
C
      PARAMETER(NN=21,MM=21,NL=22,IROM=0,ISYM=0,NNOROG=21,IDATE=4
     : ,IULCC=0)
      PARAMETER(MGD=64,JGD=33,NLD=22)
      PARAMETER(NJ=NL/NLD,ISW=(2*NJ)/(1+NJ),NLG=NLD*(1-ISW)+NL*ISW)
      PARAMETER(PI=3.14159265359,PI2=PI+PI,MFP=MM,NMAX=MM+1,MOCT=1,
     : NHEM=2-ISYM*ISYM,NMAX2=NMAX*NMAX,NLDM=NLD-1,J2Z=1+(NN-1)/2,
     : NWJ2=(J2Z*(J2Z+1+(NN/2)*2-NN))*(1-IROM)+IROM*J2Z*MM,
     : IGA=NWJ2*NHEM,IGB=IGA*NLG,MJP=NWJ2+NWJ2,
     : MGDP=MGD+1,JGDP=JGD+1,JGDNMAX=JGD*NMAX,MGD2=MGD*MGD)
      PARAMETER(IALEN=(MGD+1)*JGD)
C
      COMMON/CMCUTF/ASCARR(2,IALEN)
     :,LHDR,LDAT,LEND,LHT1,LHT2,LFT1,LFT2D,LFT2T
      CHARACTER*1  ASCARR
      CHARACTER*21 LHDR,LDAT,LEND
      CHARACTER*50 LHT1,LHT2,LFT1,LFT2D,LFT2T
C
      COMMON/CMIUTF/IHR1(15),IFR3(15)
C
      WRITE(NCHAN,'(A21,29X,''.'')') LEND
C
      RETURN
      END
      
      SUBROUTINE FILTER(GS,FILT,NN,MM,MOCT,NL,NHEM,IPAR,TEXT)
      COMPLEX GS(*)
      REAL FILT(0:MM+1)
      CHARACTER TEXT*(*)
      WRITE(2,*)TEXT
      WRITE(3,*)TEXT
      NWJ2=0
      DO 2 MP=1,MM,MOCT
      DO 2 IN=MP,NN,2
    2 NWJ2=NWJ2+1
      IGA=NWJ2*NHEM
      DO 1 IHEM=1,NHEM
      IPH=-IPAR*(IHEM-2)+(1+IPAR)*(1-IHEM)
      DO 1 L=1,NL
      I=(L-1)*IGA+(IHEM-1)*NWJ2
      DO 1 MP=1,MM,MOCT
      DO 1 IN=MP,NN,2
      I=I+1
    1 GS(I)=GS(I)*FILT(IN+IPH)
      RETURN
      END
      SUBROUTINE GWTLT(SIT,WEIGHT,J,JG)
C
C     NORMALLY A ROUTINE IN SUBLIB BUT INCLUDED HERE FOR PORTABLITY
C
      PARAMETER(PI=3.14159265359)
      DOUBLE PRECISION ACC,SA,SB,SC,D1,D2,D4,BN,GG,X,AMM,AMN,
     1 EM,ANN,RE,A,DD,DLT,DTH
      ACC=1.0D-16
      SA=DSQRT(.5D0)
      SB=DSQRT(1.5D0)
      SC=DSQRT(1.D0/3.D0)
      D1=1.D0
      D2=2.D0
      D4=4.D0
      NNN=JG+JG
      BN=NNN
      GG=D2*BN+D1
      HH=8.*BN*BN
      K=0
      AJ=J
      TH=PI*(2.*AJ-.5)/GG
      DTH=TH+(COS(TH)/SIN(TH))/HH
      X=DCOS(DTH)
54    CONTINUE
      AMM=SA
      AMN=X*SB
      EM=SC
      ANN=D1
      DO 51 N=2,NNN
      ANN=ANN+D1
      RE=DSQRT(D4*ANN*ANN-D1)/ANN
      A=RE*(X*AMN-EM*AMM)
      AMM=AMN
      AMN=A
      EM=D1/RE
51    CONTINUE
      DD=GG*EM*AMM-X*ANN*A
      K=K+1
      DLT=(D1-X*X)*A/DD
      IF (DABS(DLT).LT.ACC) GOTO 52
      IF (K.GT.50) GOTO 53
      X=X-DLT
      GOTO 54
53    CONTINUE
      WRITE(6,105)
105   FORMAT(15H NO CONVERGENCE)
52    CONTINUE
      WEIGHT=GG*(D1-X*X)/(DD*DD)
      SIT=X
      RETURN
      END












**** decks fft991f, set99, rpassm, qpassm ****
*
*
*DECK FFT991F
C     SUBROUTINE 'FFT991' - MULTIPLE FAST REAL PERIODIC TRANSFORM
C
C     Minor modifications - Clive Temperton, January 1991:
C         modified vector-chopping for better performance
C
C     REAL TRANSFORM OF LENGTH N PERFORMED BY REMOVING REDUNDANT
C     OPERATIONS FROM COMPLEX TRANSFORM OF LENGTH N
C
C     A IS THE ARRAY CONTAINING INPUT & OUTPUT DATA
C     WORK IS AN AREA OF SIZE (N+1)*MIN(LOT,64)
C     TRIGS IS A PREVIOUSLY PREPARED LIST OF TRIG FUNCTION VALUES
C     IFAX IS A PREVIOUSLY PREPARED LIST OF FACTORS OF N
C     INC IS THE INCREMENT WITHIN EACH DATA 'VECTOR'
C         (E.G. INC=1 FOR CONSECUTIVELY STORED DATA)
C     JUMP IS THE INCREMENT BETWEEN THE START OF EACH DATA VECTOR
C     N IS THE LENGTH OF THE DATA VECTORS
C     LOT IS THE NUMBER OF DATA VECTORS
C     ISIGN = +1 FOR TRANSFORM FROM SPECTRAL TO GRIDPOINT
C           = -1 FOR TRANSFORM FROM GRIDPOINT TO SPECTRAL
C
C     ORDERING OF COEFFICIENTS:
C         A(0),B(0),A(1),B(1),A(2),B(2),...,A(N/2),B(N/2)
C         WHERE B(0)=B(N/2)=0; (N+2) LOCATIONS REQUIRED
C
C     ORDERING OF DATA:
C         X(0),X(1),X(2),...,X(N-1), 0 , 0 ; (N+2) LOCATIONS REQUIRED
C
C     VECTORIZATION IS ACHIEVED ON CRAY BY DOING THE TRANSFORMS
C     IN PARALLEL
C
C     N MUST BE COMPOSED OF FACTORS 2,3 & 5 BUT DOES NOT HAVE TO BE EVEN
C
C     DEFINITION OF TRANSFORMS:
C     -------------------------
C
C     ISIGN=+1: X(J)=SUM(K=0,...,N-1)(C(K)*EXP(2*I*J*K*PI/N))
C         WHERE C(K)=A(K)+I*B(K) AND C(N-K)=A(K)-I*B(K)
C
C     ISIGN=-1: A(K)=(1/N)*SUM(J=0,...,N-1)(X(J)*COS(2*J*K*PI/N))
C               B(K)=-(1/N)*SUM(J=0,...,N-1)(X(J)*SIN(2*J*K*PI/N))
C
      SUBROUTINE FFT991(A,WORK,TRIGS,IFAX,INC,JUMP,N,LOT,ISIGN)
      DIMENSION A(N),WORK(N),TRIGS(N),IFAX(1)
C
      NFAX=IFAX(1)
      NX=N+1
      IF (MOD(N,2).EQ.1) NX=N
      NBLOX=1+(LOT-1)/64
      LEFT=LOT
      IF (ISIGN.EQ.-1) GO TO 300
C
C     ISIGN=+1, SPECTRAL TO GRIDPOINT TRANSFORM
C     -----------------------------------------
  100 CONTINUE
      ISTART=1
      DO 220 NB=1,NBLOX
      IF (LEFT.LE.64) THEN
         NVEX=LEFT
      ELSE IF (LEFT.LT.128) THEN
         NVEX=LEFT/2
      ELSE
         NVEX=64
      ENDIF
      LEFT=LEFT-NVEX
      IA=ISTART
      I=ISTART
CDIR$ IVDEP
      DO 110 J=1,NVEX
      A(I+INC)=0.5*A(I)
      I=I+JUMP
  110 CONTINUE
      IF (MOD(N,2).EQ.1) GO TO 130
      I=ISTART+N*INC
      DO 120 J=1,NVEX
      A(I)=0.5*A(I)
      I=I+JUMP
  120 CONTINUE
  130 CONTINUE
      IA=ISTART+INC
      LA=1
      IGO=+1
C
      DO 160 K=1,NFAX
      IFAC=IFAX(K+1)
      IERR=-1
      IF (IGO.EQ.-1) GO TO 140
      CALL RPASSM(A(IA),A(IA+LA*INC),WORK(1),WORK(IFAC*LA+1),TRIGS,
     *    INC,1,JUMP,NX,NVEX,N,IFAC,LA,IERR)
      GO TO 150
  140 CONTINUE
      CALL RPASSM(WORK(1),WORK(LA+1),A(IA),A(IA+IFAC*LA*INC),TRIGS,
     *    1,INC,NX,JUMP,NVEX,N,IFAC,LA,IERR)
  150 CONTINUE
      IF (IERR.NE.0) GO TO 500
      LA=IFAC*LA
      IGO=-IGO
      IA=ISTART
  160 CONTINUE
C
C     IF NECESSARY, COPY RESULTS BACK TO A
C     ------------------------------------
      IF (MOD(NFAX,2).EQ.0) GO TO 190
      IBASE=1
      JBASE=IA
      DO 180 JJ=1,NVEX
      I=IBASE
      J=JBASE
      DO 170 II=1,N
      A(J)=WORK(I)
      I=I+1
      J=J+INC
  170 CONTINUE
      IBASE=IBASE+NX
      JBASE=JBASE+JUMP
  180 CONTINUE
  190 CONTINUE
C
C     FILL IN ZEROS AT END
C     --------------------
      IX=ISTART+N*INC
CDIR$ IVDEP
      DO 210 J=1,NVEX
      A(IX)=0.0
      A(IX+INC)=0.0
      IX=IX+JUMP
  210 CONTINUE
C
      ISTART=ISTART+NVEX*JUMP
  220 CONTINUE
      RETURN
C
C     ISIGN=-1, GRIDPOINT TO SPECTRAL TRANSFORM
C     -----------------------------------------
  300 CONTINUE
      ISTART=1
      DO 410 NB=1,NBLOX
      IF (LEFT.LE.64) THEN
         NVEX=LEFT
      ELSE IF (LEFT.LT.128) THEN
         NVEX=LEFT/2
      ELSE
         NVEX=64
      ENDIF
      LEFT=LEFT-NVEX
      IA=ISTART
      LA=N
      IGO=+1
C
      DO 340 K=1,NFAX
      IFAC=IFAX(NFAX+2-K)
      LA=LA/IFAC
      IERR=-1
      IF (IGO.EQ.-1) GO TO 320
      CALL QPASSM(A(IA),A(IA+IFAC*LA*INC),WORK(1),WORK(LA+1),TRIGS,
     *    INC,1,JUMP,NX,NVEX,N,IFAC,LA,IERR)
      GO TO 330
  320 CONTINUE
      CALL QPASSM(WORK(1),WORK(IFAC*LA+1),A(IA),A(IA+LA*INC),TRIGS,
     *    1,INC,NX,JUMP,NVEX,N,IFAC,LA,IERR)
  330 CONTINUE
      IF (IERR.NE.0) GO TO 500
      IGO=-IGO
      IA=ISTART+INC
  340 CONTINUE
C
C     IF NECESSARY, COPY RESULTS BACK TO A
C     ------------------------------------
      IF (MOD(NFAX,2).EQ.0) GO TO 370
      IBASE=1
      JBASE=IA
      DO 360 JJ=1,NVEX
      I=IBASE
      J=JBASE
      DO 350 II=1,N
      A(J)=WORK(I)
      I=I+1
      J=J+INC
  350 CONTINUE
      IBASE=IBASE+NX
      JBASE=JBASE+JUMP
  360 CONTINUE
  370 CONTINUE
C
C     SHIFT A(0) & FILL IN ZERO IMAG PARTS
C     ------------------------------------
      IX=ISTART
CDIR$ IVDEP
      DO 380 J=1,NVEX
      A(IX)=A(IX+INC)
      A(IX+INC)=0.0
      IX=IX+JUMP
  380 CONTINUE
      IF (MOD(N,2).EQ.1) GO TO 400
      IZ=ISTART+(N+1)*INC
      DO 390 J=1,NVEX
      A(IZ)=0.0
      IZ=IZ+JUMP
  390 CONTINUE
  400 CONTINUE
C
      ISTART=ISTART+NVEX*JUMP
  410 CONTINUE
      RETURN
C
C     ERROR MESSAGES
C     --------------
  500 CONTINUE
      GO TO (510,530,550) IERR
  510 CONTINUE
      WRITE(6,520) NVEX
  520 FORMAT(16H1VECTOR LENGTH =,I4,17H, GREATER THAN 64)
      GO TO 570
  530 CONTINUE
      WRITE(6,540) IFAC
  540 FORMAT( 9H1FACTOR =,I3,17H, NOT CATERED FOR)
      GO TO 570
  550 CONTINUE
      WRITE(6,560) IFAC
  560 FORMAT(9H1FACTOR =,I3,31H, ONLY CATERED FOR IF LA*IFAC=N)
  570 CONTINUE
      RETURN
      END
*DECK SET99
C     SUBROUTINE 'SET99' - COMPUTES FACTORS OF N & TRIGONOMETRIC
C     FUNCTINS REQUIRED BY FFT991(F)
C
      SUBROUTINE SET99(TRIGS,IFAX,N)
      DIMENSION TRIGS(N),IFAX(1),JFAX(10),LFAX(7)
      DATA LFAX/6,8,5,4,3,2,1/
C
      DEL=4.0*ASIN(1.0)/FLOAT(N)
      NIL=0
      NHL=(N/2)-1
      DO 10 K=NIL,NHL
      ANGLE=FLOAT(K)*DEL
      TRIGS(2*K+1)=COS(ANGLE)
      TRIGS(2*K+2)=SIN(ANGLE)
   10 CONTINUE
C
C     FIND FACTORS OF N (8,6,5,4,3,2; ONLY ONE 8 ALLOWED)
C     LOOK FOR SIXES FIRST, STORE FACTORS IN DESCENDING ORDER
      NU=N
      IFAC=6
      K=0
      L=1
   20 CONTINUE
      IF (MOD(NU,IFAC).NE.0) GO TO 30
      K=K+1
      JFAX(K)=IFAC
      IF (IFAC.NE.8) GO TO 25
      IF (K.EQ.1) GO TO 25
      JFAX(1)=8
      JFAX(K)=6
   25 CONTINUE
      NU=NU/IFAC
      IF (NU.EQ.1) GO TO 50
      IF (IFAC.NE.8) GO TO 20
   30 CONTINUE
      L=L+1
      IFAC=LFAX(L)
      IF (IFAC.GT.1) GO TO 20
C
      WRITE(6,40) N
   40 FORMAT(4H1N =,I4,27H - CONTAINS ILLEGAL FACTORS)
      RETURN
C
C     NOW REVERSE ORDER OF FACTORS
   50 CONTINUE
      NFAX=K
      IFAX(1)=NFAX
      DO 60 I=1,NFAX
      IFAX(NFAX+2-I)=JFAX(I)
   60 CONTINUE
      RETURN
      END
*DECK RPASSM
C     SUBROUTINE 'RPASSM' - PERFORMS ONE PASS THROUGH DATA AS PART
C     OF MULTIPLE REAL FFT (FOURIER SYNTHESIS) ROUTINE
C
C     A IS FIRST REAL INPUT VECTOR
C         EQUIVALENCE B(1) WITH A (LA*INC1+1)
C     C IS FIRST REAL OUTPUT VECTOR
C         EQUIVALENCE D(1) WITH C(IFAC*LA*INC2+1)
C     TRIGS IS A PRECALCULATED LIST OF SINES & COSINES
C     INC1 IS THE ADDRESSING INCREMENT FOR A
C     INC2 IS THE ADDRESSING INCREMENT FOR C
C     INC3 IS THE INCREMENT BETWEEN INPUT VECTORS A
C     INC4 IS THE INCREMENT BETWEEN OUTPUT VECTORS C
C     LOT IS THE NUMBER OF VECTORS
C     N IS THE LENGTH OF THE VECTORS
C     IFAC IS THE CURRENT FACTOR OF N
C     LA IS THE PRODUCT OF PREVIOUS FACTORS
C     IERR IS AN ERROR INDICATOR:
C              0 - PASS COMPLETED WITHOUT ERROR
C              1 - LOT GREATER THAN 64
C              2 - IFAC NOT CATERED FOR
C              3 - IFAC ONLY CATERED FOR IF LA=N/IFAC
C
C-----------------------------------------------------------------------
C
      SUBROUTINE RPASSM(A,B,C,D,TRIGS,INC1,INC2,INC3,INC4,LOT,N,IFAC,
     *    LA,IERR)
      DIMENSION A(N),B(N),C(N),D(N),TRIGS(N)
C
      DIMENSION A10(64),A11(64),A20(64),A21(64),
     *    B10(64),B11(64),B20(64),B21(64)
      DATA SIN36/0.587785252292473/,SIN72/0.951056516295154/,
     *    QRT5/0.559016994374947/,SIN60/0.866025403784437/
C
      M=N/IFAC
      IINK=LA*INC1
      JINK=LA*INC2
      JUMP=(IFAC-1)*JINK
      KSTOP=(N-IFAC)/(2*IFAC)
C
      IBAD=1
      IF (LOT.GT.64) GO TO 910
      IBASE=0
      JBASE=0
      IGO=IFAC-1
      IF (IGO.EQ.7) IGO=6
      IBAD=2
      IF (IGO.LT.1.OR.IGO.GT.6) GO TO 910
      GO TO (200,300,400,500,600,800),IGO
C
C     CODING FOR FACTOR 2
C     -------------------
  200 CONTINUE
      IA=1
      IB=IA+(2*M-LA)*INC1
      JA=1
      JB=JA+JINK
C
      IF (LA.EQ.M) GO TO 290
C
      DO 220 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 210 IJK=1,LOT
      C(JA+J)=A(IA+I)+A(IB+I)
      C(JB+J)=A(IA+I)-A(IB+I)
      I=I+INC3
      J=J+INC4
  210 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  220 CONTINUE
      IA=IA+IINK
      IINK=2*IINK
      IB=IB-IINK
      IBASE=0
      JBASE=JBASE+JUMP
      JUMP=2*JUMP+JINK
      IF (IA.EQ.IB) GO TO 260
      DO 250 K=LA,KSTOP,LA
      KB=K+K
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      IBASE=0
      DO 240 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 230 IJK=1,LOT
      C(JA+J)=A(IA+I)+A(IB+I)
      D(JA+J)=B(IA+I)-B(IB+I)
      C(JB+J)=C1*(A(IA+I)-A(IB+I))-S1*(B(IA+I)+B(IB+I))
      D(JB+J)=S1*(A(IA+I)-A(IB+I))+C1*(B(IA+I)+B(IB+I))
      I=I+INC3
      J=J+INC4
  230 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  240 CONTINUE
      IA=IA+IINK
      IB=IB-IINK
      JBASE=JBASE+JUMP
  250 CONTINUE
      IF (IA.GT.IB) GO TO 900
  260 CONTINUE
      IBASE=0
      DO 280 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 270 IJK=1,LOT
      C(JA+J)=A(IA+I)
      C(JB+J)=-B(IA+I)
      I=I+INC3
      J=J+INC4
  270 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  280 CONTINUE
      GO TO 900
C
  290 CONTINUE
      DO 294 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 292 IJK=1,LOT
      C(JA+J)=2.0*(A(IA+I)+A(IB+I))
      C(JB+J)=2.0*(A(IA+I)-A(IB+I))
      I=I+INC3
      J=J+INC4
  292 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  294 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 3
C     -------------------
  300 CONTINUE
      IA=1
      IB=IA+(2*M-LA)*INC1
      IC=IB
      JA=1
      JB=JA+JINK
      JC=JB+JINK
C
      IF (LA.EQ.M) GO TO 390
C
      DO 320 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 310 IJK=1,LOT
      C(JA+J)=A(IA+I)+A(IB+I)
      C(JB+J)=(A(IA+I)-0.5*A(IB+I))-(SIN60*(B(IB+I)))
      C(JC+J)=(A(IA+I)-0.5*A(IB+I))+(SIN60*(B(IB+I)))
      I=I+INC3
      J=J+INC4
  310 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  320 CONTINUE
      IA=IA+IINK
      IINK=2*IINK
      IB=IB+IINK
      IC=IC-IINK
      JBASE=JBASE+JUMP
      JUMP=2*JUMP+JINK
      IF (IA.EQ.IC) GO TO 360
      DO 350 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      IBASE=0
      DO 340 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 330 IJK=1,LOT
      C(JA+J)=A(IA+I)+(A(IB+I)+A(IC+I))
      D(JA+J)=B(IA+I)+(B(IB+I)-B(IC+I))
      C(JB+J)=
     *    C1*((A(IA+I)-0.5*(A(IB+I)+A(IC+I)))-(SIN60*(B(IB+I)+B(IC+I))))
     *   -S1*((B(IA+I)-0.5*(B(IB+I)-B(IC+I)))+(SIN60*(A(IB+I)-A(IC+I))))
      D(JB+J)=
     *    S1*((A(IA+I)-0.5*(A(IB+I)+A(IC+I)))-(SIN60*(B(IB+I)+B(IC+I))))
     *   +C1*((B(IA+I)-0.5*(B(IB+I)-B(IC+I)))+(SIN60*(A(IB+I)-A(IC+I))))
      C(JC+J)=
     *    C2*((A(IA+I)-0.5*(A(IB+I)+A(IC+I)))+(SIN60*(B(IB+I)+B(IC+I))))
     *   -S2*((B(IA+I)-0.5*(B(IB+I)-B(IC+I)))-(SIN60*(A(IB+I)-A(IC+I))))
      D(JC+J)=
     *    S2*((A(IA+I)-0.5*(A(IB+I)+A(IC+I)))+(SIN60*(B(IB+I)+B(IC+I))))
     *   +C2*((B(IA+I)-0.5*(B(IB+I)-B(IC+I)))-(SIN60*(A(IB+I)-A(IC+I))))
      I=I+INC3
      J=J+INC4
  330 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  340 CONTINUE
      IA=IA+IINK
      IB=IB+IINK
      IC=IC-IINK
      JBASE=JBASE+JUMP
  350 CONTINUE
      IF (IA.GT.IC) GO TO 900
  360 CONTINUE
      IBASE=0
      DO 380 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 370 IJK=1,LOT
      C(JA+J)=A(IA+I)+A(IB+I)
      C(JB+J)=(0.5*A(IA+I)-A(IB+I))-(SIN60*B(IA+I))
      C(JC+J)=-(0.5*A(IA+I)-A(IB+I))-(SIN60*B(IA+I))
      I=I+INC3
      J=J+INC4
  370 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  380 CONTINUE
      GO TO 900
C
  390 CONTINUE
      SSIN60=2.0*SIN60
      DO 394 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 392 IJK=1,LOT
      C(JA+J)=2.0*(A(IA+I)+A(IB+I))
      C(JB+J)=(2.0*A(IA+I)-A(IB+I))-(SSIN60*B(IB+I))
      C(JC+J)=(2.0*A(IA+I)-A(IB+I))+(SSIN60*B(IB+I))
      I=I+INC3
      J=J+INC4
  392 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  394 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 4
C     -------------------
  400 CONTINUE
      IA=1
      IB=IA+(2*M-LA)*INC1
      IC=IB+2*M*INC1
      ID=IB
      JA=1
      JB=JA+JINK
      JC=JB+JINK
      JD=JC+JINK
C
      IF (LA.EQ.M) GO TO 490
C
      DO 420 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 410 IJK=1,LOT
      C(JA+J)=(A(IA+I)+A(IC+I))+A(IB+I)
      C(JB+J)=(A(IA+I)-A(IC+I))-B(IB+I)
      C(JC+J)=(A(IA+I)+A(IC+I))-A(IB+I)
      C(JD+J)=(A(IA+I)-A(IC+I))+B(IB+I)
      I=I+INC3
      J=J+INC4
  410 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  420 CONTINUE
      IA=IA+IINK
      IINK=2*IINK
      IB=IB+IINK
      IC=IC-IINK
      ID=ID-IINK
      JBASE=JBASE+JUMP
      JUMP=2*JUMP+JINK
      IF (IB.EQ.IC) GO TO 460
      DO 450 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      KD=KC+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      C3=TRIGS(KD+1)
      S3=TRIGS(KD+2)
      IBASE=0
      DO 440 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 430 IJK=1,LOT
      C(JA+J)=(A(IA+I)+A(IC+I))+(A(IB+I)+A(ID+I))
      D(JA+J)=(B(IA+I)-B(IC+I))+(B(IB+I)-B(ID+I))
      C(JC+J)=
     *    C2*((A(IA+I)+A(IC+I))-(A(IB+I)+A(ID+I)))
     *   -S2*((B(IA+I)-B(IC+I))-(B(IB+I)-B(ID+I)))
      D(JC+J)=
     *    S2*((A(IA+I)+A(IC+I))-(A(IB+I)+A(ID+I)))
     *   +C2*((B(IA+I)-B(IC+I))-(B(IB+I)-B(ID+I)))
      C(JB+J)=
     *    C1*((A(IA+I)-A(IC+I))-(B(IB+I)+B(ID+I)))
     *   -S1*((B(IA+I)+B(IC+I))+(A(IB+I)-A(ID+I)))
      D(JB+J)=
     *    S1*((A(IA+I)-A(IC+I))-(B(IB+I)+B(ID+I)))
     *   +C1*((B(IA+I)+B(IC+I))+(A(IB+I)-A(ID+I)))
      C(JD+J)=
     *    C3*((A(IA+I)-A(IC+I))+(B(IB+I)+B(ID+I)))
     *   -S3*((B(IA+I)+B(IC+I))-(A(IB+I)-A(ID+I)))
      D(JD+J)=
     *    S3*((A(IA+I)-A(IC+I))+(B(IB+I)+B(ID+I)))
     *   +C3*((B(IA+I)+B(IC+I))-(A(IB+I)-A(ID+I)))
      I=I+INC3
      J=J+INC4
  430 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  440 CONTINUE
      IA=IA+IINK
      IB=IB+IINK
      IC=IC-IINK
      ID=ID-IINK
      JBASE=JBASE+JUMP
  450 CONTINUE
      IF (IB.GT.IC) GO TO 900
  460 CONTINUE
      IBASE=0
      SIN45=SQRT(0.5)
      DO 480 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 470 IJK=1,LOT
      C(JA+J)=A(IA+I)+A(IB+I)
      C(JB+J)=SIN45*((A(IA+I)-A(IB+I))-(B(IA+I)+B(IB+I)))
      C(JC+J)=B(IB+I)-B(IA+I)
      C(JD+J)=-SIN45*((A(IA+I)-A(IB+I))+(B(IA+I)+B(IB+I)))
      I=I+INC3
      J=J+INC4
  470 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  480 CONTINUE
      GO TO 900
C
  490 CONTINUE
      DO 494 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 492 IJK=1,LOT
      C(JA+J)=2.0*((A(IA+I)+A(IC+I))+A(IB+I))
      C(JB+J)=2.0*((A(IA+I)-A(IC+I))-B(IB+I))
      C(JC+J)=2.0*((A(IA+I)+A(IC+I))-A(IB+I))
      C(JD+J)=2.0*((A(IA+I)-A(IC+I))+B(IB+I))
      I=I+INC3
      J=J+INC4
  492 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  494 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 5
C     -------------------
  500 CONTINUE
      IA=1
      IB=IA+(2*M-LA)*INC1
      IC=IB+2*M*INC1
      ID=IC
      IE=IB
      JA=1
      JB=JA+JINK
      JC=JB+JINK
      JD=JC+JINK
      JE=JD+JINK
C
      IF (LA.EQ.M) GO TO 590
C
      DO 520 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 510 IJK=1,LOT
      C(JA+J)=A(IA+I)+(A(IB+I)+A(IC+I))
      C(JB+J)=((A(IA+I)-0.25*(A(IB+I)+A(IC+I)))+QRT5*(A(IB+I)-A(IC+I)))
     *    -(SIN72*B(IB+I)+SIN36*B(IC+I))
      C(JC+J)=((A(IA+I)-0.25*(A(IB+I)+A(IC+I)))-QRT5*(A(IB+I)-A(IC+I)))
     *    -(SIN36*B(IB+I)-SIN72*B(IC+I))
      C(JD+J)=((A(IA+I)-0.25*(A(IB+I)+A(IC+I)))-QRT5*(A(IB+I)-A(IC+I)))
     *    +(SIN36*B(IB+I)-SIN72*B(IC+I))
      C(JE+J)=((A(IA+I)-0.25*(A(IB+I)+A(IC+I)))+QRT5*(A(IB+I)-A(IC+I)))
     *    +(SIN72*B(IB+I)+SIN36*B(IC+I))
      I=I+INC3
      J=J+INC4
  510 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  520 CONTINUE
      IA=IA+IINK
      IINK=2*IINK
      IB=IB+IINK
      IC=IC+IINK
      ID=ID-IINK
      IE=IE-IINK
      JBASE=JBASE+JUMP
      JUMP=2*JUMP+JINK
      IF (IB.EQ.ID) GO TO 560
      DO 550 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      KD=KC+KB
      KE=KD+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      C3=TRIGS(KD+1)
      S3=TRIGS(KD+2)
      C4=TRIGS(KE+1)
      S4=TRIGS(KE+2)
      IBASE=0
      DO 540 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 530 IJK=1,LOT
C
      A10(IJK)=(A(IA+I)-0.25*((A(IB+I)+A(IE+I))+(A(IC+I)+A(ID+I))))
     *    +QRT5*((A(IB+I)+A(IE+I))-(A(IC+I)+A(ID+I)))
      A20(IJK)=(A(IA+I)-0.25*((A(IB+I)+A(IE+I))+(A(IC+I)+A(ID+I))))
     *    -QRT5*((A(IB+I)+A(IE+I))-(A(IC+I)+A(ID+I)))
      B10(IJK)=(B(IA+I)-0.25*((B(IB+I)-B(IE+I))+(B(IC+I)-B(ID+I))))
     *    +QRT5*((B(IB+I)-B(IE+I))-(B(IC+I)-B(ID+I)))
      B20(IJK)=(B(IA+I)-0.25*((B(IB+I)-B(IE+I))+(B(IC+I)-B(ID+I))))
     *    -QRT5*((B(IB+I)-B(IE+I))-(B(IC+I)-B(ID+I)))
      A11(IJK)=SIN72*(B(IB+I)+B(IE+I))+SIN36*(B(IC+I)+B(ID+I))
      A21(IJK)=SIN36*(B(IB+I)+B(IE+I))-SIN72*(B(IC+I)+B(ID+I))
      B11(IJK)=SIN72*(A(IB+I)-A(IE+I))+SIN36*(A(IC+I)-A(ID+I))
      B21(IJK)=SIN36*(A(IB+I)-A(IE+I))-SIN72*(A(IC+I)-A(ID+I))
C
      C(JA+J)=A(IA+I)+((A(IB+I)+A(IE+I))+(A(IC+I)+A(ID+I)))
      D(JA+J)=B(IA+I)+((B(IB+I)-B(IE+I))+(B(IC+I)-B(ID+I)))
      C(JB+J)=C1*(A10(IJK)-A11(IJK))-S1*(B10(IJK)+B11(IJK))
      D(JB+J)=S1*(A10(IJK)-A11(IJK))+C1*(B10(IJK)+B11(IJK))
      C(JE+J)=C4*(A10(IJK)+A11(IJK))-S4*(B10(IJK)-B11(IJK))
      D(JE+J)=S4*(A10(IJK)+A11(IJK))+C4*(B10(IJK)-B11(IJK))
      C(JC+J)=C2*(A20(IJK)-A21(IJK))-S2*(B20(IJK)+B21(IJK))
      D(JC+J)=S2*(A20(IJK)-A21(IJK))+C2*(B20(IJK)+B21(IJK))
      C(JD+J)=C3*(A20(IJK)+A21(IJK))-S3*(B20(IJK)-B21(IJK))
      D(JD+J)=S3*(A20(IJK)+A21(IJK))+C3*(B20(IJK)-B21(IJK))
C
      I=I+INC3
      J=J+INC4
  530 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  540 CONTINUE
      IA=IA+IINK
      IB=IB+IINK
      IC=IC+IINK
      ID=ID-IINK
      IE=IE-IINK
      JBASE=JBASE+JUMP
  550 CONTINUE
      IF (IB.GT.ID) GO TO 900
  560 CONTINUE
      IBASE=0
      DO 580 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 570 IJK=1,LOT
      C(JA+J)=(A(IA+I)+A(IB+I))+A(IC+I)
      C(JB+J)=(QRT5*(A(IA+I)-A(IB+I))+(0.25*(A(IA+I)+A(IB+I))-A(IC+I)))
     *    -(SIN36*B(IA+I)+SIN72*B(IB+I))
      C(JE+J)=-(QRT5*(A(IA+I)-A(IB+I))+(0.25*(A(IA+I)+A(IB+I))-A(IC+I)))
     *    -(SIN36*B(IA+I)+SIN72*B(IB+I))
      C(JC+J)=(QRT5*(A(IA+I)-A(IB+I))-(0.25*(A(IA+I)+A(IB+I))-A(IC+I)))
     *    -(SIN72*B(IA+I)-SIN36*B(IB+I))
      C(JD+J)=-(QRT5*(A(IA+I)-A(IB+I))-(0.25*(A(IA+I)+A(IB+I))-A(IC+I)))
     *    -(SIN72*B(IA+I)-SIN36*B(IB+I))
      I=I+INC3
      J=J+INC4
  570 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  580 CONTINUE
      GO TO 900
C
  590 CONTINUE
      QQRT5=2.0*QRT5
      SSIN36=2.0*SIN36
      SSIN72=2.0*SIN72
      DO 594 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 592 IJK=1,LOT
      C(JA+J)=2.0*(A(IA+I)+(A(IB+I)+A(IC+I)))
      C(JB+J)=(2.0*(A(IA+I)-0.25*(A(IB+I)+A(IC+I)))
     *    +QQRT5*(A(IB+I)-A(IC+I)))-(SSIN72*B(IB+I)+SSIN36*B(IC+I))
      C(JC+J)=(2.0*(A(IA+I)-0.25*(A(IB+I)+A(IC+I)))
     *    -QQRT5*(A(IB+I)-A(IC+I)))-(SSIN36*B(IB+I)-SSIN72*B(IC+I))
      C(JD+J)=(2.0*(A(IA+I)-0.25*(A(IB+I)+A(IC+I)))
     *    -QQRT5*(A(IB+I)-A(IC+I)))+(SSIN36*B(IB+I)-SSIN72*B(IC+I))
      C(JE+J)=(2.0*(A(IA+I)-0.25*(A(IB+I)+A(IC+I)))
     *    +QQRT5*(A(IB+I)-A(IC+I)))+(SSIN72*B(IB+I)+SSIN36*B(IC+I))
      I=I+INC3
      J=J+INC4
  592 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  594 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 6
C     -------------------
  600 CONTINUE
      IA=1
      IB=IA+(2*M-LA)*INC1
      IC=IB+2*M*INC1
      ID=IC+2*M*INC1
      IE=IC
      IF=IB
      JA=1
      JB=JA+JINK
      JC=JB+JINK
      JD=JC+JINK
      JE=JD+JINK
      JF=JE+JINK
C
      IF (LA.EQ.M) GO TO 690
C
      DO 620 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 610 IJK=1,LOT
      C(JA+J)=(A(IA+I)+A(ID+I))+(A(IB+I)+A(IC+I))
      C(JD+J)=(A(IA+I)-A(ID+I))-(A(IB+I)-A(IC+I))
      C(JB+J)=((A(IA+I)-A(ID+I))+0.5*(A(IB+I)-A(IC+I)))
     *    -(SIN60*(B(IB+I)+B(IC+I)))
      C(JF+J)=((A(IA+I)-A(ID+I))+0.5*(A(IB+I)-A(IC+I)))
     *    +(SIN60*(B(IB+I)+B(IC+I)))
      C(JC+J)=((A(IA+I)+A(ID+I))-0.5*(A(IB+I)+A(IC+I)))
     *    -(SIN60*(B(IB+I)-B(IC+I)))
      C(JE+J)=((A(IA+I)+A(ID+I))-0.5*(A(IB+I)+A(IC+I)))
     *    +(SIN60*(B(IB+I)-B(IC+I)))
      I=I+INC3
      J=J+INC4
  610 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  620 CONTINUE
      IA=IA+IINK
      IINK=2*IINK
      IB=IB+IINK
      IC=IC+IINK
      ID=ID-IINK
      IE=IE-IINK
      IF=IF-IINK
      JBASE=JBASE+JUMP
      JUMP=2*JUMP+JINK
      IF (IC.EQ.ID) GO TO 660
      DO 650 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      KD=KC+KB
      KE=KD+KB
      KF=KE+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      C3=TRIGS(KD+1)
      S3=TRIGS(KD+2)
      C4=TRIGS(KE+1)
      S4=TRIGS(KE+2)
      C5=TRIGS(KF+1)
      S5=TRIGS(KF+2)
      IBASE=0
      DO 640 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 630 IJK=1,LOT
C
      A11(IJK)= (A(IE+I)+A(IB+I))+(A(IC+I)+A(IF+I))
      A20(IJK)=(A(IA+I)+A(ID+I))-0.5*A11(IJK)
      A21(IJK)=SIN60*((A(IE+I)+A(IB+I))-(A(IC+I)+A(IF+I)))
      B11(IJK)= (B(IB+I)-B(IE+I))+(B(IC+I)-B(IF+I))
      B20(IJK)=(B(IA+I)-B(ID+I))-0.5*B11(IJK)
      B21(IJK)=SIN60*((B(IB+I)-B(IE+I))-(B(IC+I)-B(IF+I)))
C
      C(JA+J)=(A(IA+I)+A(ID+I))+A11(IJK)
      D(JA+J)=(B(IA+I)-B(ID+I))+B11(IJK)
      C(JC+J)=C2*(A20(IJK)-B21(IJK))-S2*(B20(IJK)+A21(IJK))
      D(JC+J)=S2*(A20(IJK)-B21(IJK))+C2*(B20(IJK)+A21(IJK))
      C(JE+J)=C4*(A20(IJK)+B21(IJK))-S4*(B20(IJK)-A21(IJK))
      D(JE+J)=S4*(A20(IJK)+B21(IJK))+C4*(B20(IJK)-A21(IJK))
C
      A11(IJK)=(A(IE+I)-A(IB+I))+(A(IC+I)-A(IF+I))
      B11(IJK)=(B(IE+I)+B(IB+I))-(B(IC+I)+B(IF+I))
      A20(IJK)=(A(IA+I)-A(ID+I))-0.5*A11(IJK)
      A21(IJK)=SIN60*((A(IE+I)-A(IB+I))-(A(IC+I)-A(IF+I)))
      B20(IJK)=(B(IA+I)+B(ID+I))+0.5*B11(IJK)
      B21(IJK)=SIN60*((B(IE+I)+B(IB+I))+(B(IC+I)+B(IF+I)))
C
      C(JD+J)=
     *  C3*((A(IA+I)-A(ID+I))+A11(IJK))-S3*((B(IA+I)+B(ID+I))-B11(IJK))
      D(JD+J)=
     *  S3*((A(IA+I)-A(ID+I))+A11(IJK))+C3*((B(IA+I)+B(ID+I))-B11(IJK))
      C(JB+J)=C1*(A20(IJK)-B21(IJK))-S1*(B20(IJK)-A21(IJK))
      D(JB+J)=S1*(A20(IJK)-B21(IJK))+C1*(B20(IJK)-A21(IJK))
      C(JF+J)=C5*(A20(IJK)+B21(IJK))-S5*(B20(IJK)+A21(IJK))
      D(JF+J)=S5*(A20(IJK)+B21(IJK))+C5*(B20(IJK)+A21(IJK))
C
      I=I+INC3
      J=J+INC4
  630 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  640 CONTINUE
      IA=IA+IINK
      IB=IB+IINK
      IC=IC+IINK
      ID=ID-IINK
      IE=IE-IINK
      IF=IF-IINK
      JBASE=JBASE+JUMP
  650 CONTINUE
      IF (IC.GT.ID) GO TO 900
  660 CONTINUE
      IBASE=0
      DO 680 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 670 IJK=1,LOT
      C(JA+J)=A(IB+I)+(A(IA+I)+A(IC+I))
      C(JD+J)=B(IB+I)-(B(IA+I)+B(IC+I))
      C(JB+J)=(SIN60*(A(IA+I)-A(IC+I)))-(0.5*(B(IA+I)+B(IC+I))+B(IB+I))
      C(JF+J)=-(SIN60*(A(IA+I)-A(IC+I)))-(0.5*(B(IA+I)+B(IC+I))+B(IB+I))
      C(JC+J)=SIN60*(B(IC+I)-B(IA+I))+(0.5*(A(IA+I)+A(IC+I))-A(IB+I))
      C(JE+J)=SIN60*(B(IC+I)-B(IA+I))-(0.5*(A(IA+I)+A(IC+I))-A(IB+I))
      I=I+INC3
      J=J+INC4
  670 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  680 CONTINUE
      GO TO 900
C
  690 CONTINUE
      SSIN60=2.0*SIN60
      DO 694 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 692 IJK=1,LOT
      C(JA+J)=(2.0*(A(IA+I)+A(ID+I)))+(2.0*(A(IB+I)+A(IC+I)))
      C(JD+J)=(2.0*(A(IA+I)-A(ID+I)))-(2.0*(A(IB+I)-A(IC+I)))
      C(JB+J)=(2.0*(A(IA+I)-A(ID+I))+(A(IB+I)-A(IC+I)))
     *    -(SSIN60*(B(IB+I)+B(IC+I)))
      C(JF+J)=(2.0*(A(IA+I)-A(ID+I))+(A(IB+I)-A(IC+I)))
     *    +(SSIN60*(B(IB+I)+B(IC+I)))
      C(JC+J)=(2.0*(A(IA+I)+A(ID+I))-(A(IB+I)+A(IC+I)))
     *    -(SSIN60*(B(IB+I)-B(IC+I)))
      C(JE+J)=(2.0*(A(IA+I)+A(ID+I))-(A(IB+I)+A(IC+I)))
     *    +(SSIN60*(B(IB+I)-B(IC+I)))
      I=I+INC3
      J=J+INC4
  692 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  694 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 8
C     -------------------
  800 CONTINUE
      IBAD=3
      IF (LA.NE.M) GO TO 910
      IA=1
      IB=IA+LA*INC1
      IC=IB+2*LA*INC1
      ID=IC+2*LA*INC1
      IE=ID+2*LA*INC1
      JA=1
      JB=JA+JINK
      JC=JB+JINK
      JD=JC+JINK
      JE=JD+JINK
      JF=JE+JINK
      JG=JF+JINK
      JH=JG+JINK
      SSIN45=SQRT(2.0)
C
      DO 820 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 810 IJK=1,LOT
      C(JA+J)=2.0*(((A(IA+I)+A(IE+I))+A(IC+I))+(A(IB+I)+A(ID+I)))
      C(JE+J)=2.0*(((A(IA+I)+A(IE+I))+A(IC+I))-(A(IB+I)+A(ID+I)))
      C(JC+J)=2.0*(((A(IA+I)+A(IE+I))-A(IC+I))-(B(IB+I)-B(ID+I)))
      C(JG+J)=2.0*(((A(IA+I)+A(IE+I))-A(IC+I))+(B(IB+I)-B(ID+I)))
      C(JB+J)=2.0*((A(IA+I)-A(IE+I))-B(IC+I))
     *    +SSIN45*((A(IB+I)-A(ID+I))-(B(IB+I)+B(ID+I)))
      C(JF+J)=2.0*((A(IA+I)-A(IE+I))-B(IC+I))
     *    -SSIN45*((A(IB+I)-A(ID+I))-(B(IB+I)+B(ID+I)))
      C(JD+J)=2.0*((A(IA+I)-A(IE+I))+B(IC+I))
     *    -SSIN45*((A(IB+I)-A(ID+I))+(B(IB+I)+B(ID+I)))
      C(JH+J)=2.0*((A(IA+I)-A(IE+I))+B(IC+I))
     *    +SSIN45*((A(IB+I)-A(ID+I))+(B(IB+I)+B(ID+I)))
      I=I+INC3
      J=J+INC4
  810 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  820 CONTINUE
C
C     RETURN
C     ------
  900 CONTINUE
      IBAD=0
  910 CONTINUE
      IERR=IBAD
      RETURN
      END
*DECK QPASSM
C     SUBROUTINE 'QPASSM' - PERFORMS ONE PASS THROUGH DATA AS PART
C     OF MULTIPLE REAL FFT (FOURIER ANALYSIS) ROUTINE
C
C     A IS FIRST REAL INPUT VECTOR
C         EQUIVALENCE B(1) WITH A(IFAC*LA*INC1+1)
C     C IS FIRST REAL OUTPUT VECTOR
C         EQUIVALENCE D(1) WITH C(LA*INC2+1)
C     TRIGS IS A PRECALCULATED LIST OF SINES & COSINES
C     INC1 IS THE ADDRESSING INCREMENT FOR A
C     INC2 IS THE ADDRESSING INCREMENT FOR C
C     INC3 IS THE INCREMENT BETWEEN INPUT VECTORS A
C     INC4 IS THE INCREMENT BETWEEN OUTPUT VECTORS C
C     LOT IS THE NUMBER OF VECTORS
C     N IS THE LENGTH OF THE VECTORS
C     IFAC IS THE CURRENT FACTOR OF N
C     LA = N/(PRODUCT OF FACTORS USED SO FAR)
C     IERR IS AN ERROR INDICATOR:
C              0 - PASS COMPLETED WITHOUT ERROR
C              1 - LOT GREATER THAN 64
C              2 - IFAC NOT CATERED FOR
C              3 - IFAC ONLY CATERED FOR IF LA=N/IFAC
C
C-----------------------------------------------------------------------
C
      SUBROUTINE QPASSM(A,B,C,D,TRIGS,INC1,INC2,INC3,INC4,LOT,N,IFAC,
     *    LA,IERR)
      DIMENSION A(N),B(N),C(N),D(N),TRIGS(N)
C
      DATA SIN36/0.587785252292473/,SIN72/0.951056516295154/,
     *    QRT5/0.559016994374947/,SIN60/0.866025403784437/
C
      M=N/IFAC
      IINK=LA*INC1
      JINK=LA*INC2
      IJUMP=(IFAC-1)*IINK
      KSTOP=(N-IFAC)/(2*IFAC)
C
      IBAD=1
      IF (LOT.GT.64) GO TO 910
      IBASE=0
      JBASE=0
      IGO=IFAC-1
      IF (IGO.EQ.7) IGO=6
      IBAD=2
      IF (IGO.LT.1.OR.IGO.GT.6) GO TO 910
      GO TO (200,300,400,500,600,800),IGO
C
C     CODING FOR FACTOR 2
C     -------------------
  200 CONTINUE
      IA=1
      IB=IA+IINK
      JA=1
      JB=JA+(2*M-LA)*INC2
C
      IF (LA.EQ.M) GO TO 290
C
      DO 220 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 210 IJK=1,LOT
      C(JA+J)=A(IA+I)+A(IB+I)
      C(JB+J)=A(IA+I)-A(IB+I)
      I=I+INC3
      J=J+INC4
  210 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  220 CONTINUE
      JA=JA+JINK
      JINK=2*JINK
      JB=JB-JINK
      IBASE=IBASE+IJUMP
      IJUMP=2*IJUMP+IINK
      IF (JA.EQ.JB) GO TO 260
      DO 250 K=LA,KSTOP,LA
      KB=K+K
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      JBASE=0
      DO 240 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 230 IJK=1,LOT
      C(JA+J)=A(IA+I)+(C1*A(IB+I)+S1*B(IB+I))
      C(JB+J)=A(IA+I)-(C1*A(IB+I)+S1*B(IB+I))
      D(JA+J)=(C1*B(IB+I)-S1*A(IB+I))+B(IA+I)
      D(JB+J)=(C1*B(IB+I)-S1*A(IB+I))-B(IA+I)
      I=I+INC3
      J=J+INC4
  230 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  240 CONTINUE
      IBASE=IBASE+IJUMP
      JA=JA+JINK
      JB=JB-JINK
  250 CONTINUE
      IF (JA.GT.JB) GO TO 900
  260 CONTINUE
      JBASE=0
      DO 280 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 270 IJK=1,LOT
      C(JA+J)=A(IA+I)
      D(JA+J)=-A(IB+I)
      I=I+INC3
      J=J+INC4
  270 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  280 CONTINUE
      GO TO 900
C
  290 CONTINUE
      Z=1.0/FLOAT(N)
      DO 294 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 292 IJK=1,LOT
      C(JA+J)=Z*(A(IA+I)+A(IB+I))
      C(JB+J)=Z*(A(IA+I)-A(IB+I))
      I=I+INC3
      J=J+INC4
  292 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  294 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 3
C     -------------------
  300 CONTINUE
      IA=1
      IB=IA+IINK
      IC=IB+IINK
      JA=1
      JB=JA+(2*M-LA)*INC2
      JC=JB
C
      IF (LA.EQ.M) GO TO 390
C
      DO 320 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 310 IJK=1,LOT
      C(JA+J)=A(IA+I)+(A(IB+I)+A(IC+I))
      C(JB+J)=A(IA+I)-0.5*(A(IB+I)+A(IC+I))
      D(JB+J)=SIN60*(A(IC+I)-A(IB+I))
      I=I+INC3
      J=J+INC4
  310 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  320 CONTINUE
      JA=JA+JINK
      JINK=2*JINK
      JB=JB+JINK
      JC=JC-JINK
      IBASE=IBASE+IJUMP
      IJUMP=2*IJUMP+IINK
      IF (JA.EQ.JC) GO TO 360
      DO 350 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      JBASE=0
      DO 340 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 330 IJK=1,LOT
      A1=(C1*A(IB+I)+S1*B(IB+I))+(C2*A(IC+I)+S2*B(IC+I))
      B1=(C1*B(IB+I)-S1*A(IB+I))+(C2*B(IC+I)-S2*A(IC+I))
      A2=A(IA+I)-0.5*A1
      B2=B(IA+I)-0.5*B1
      A3=SIN60*((C1*A(IB+I)+S1*B(IB+I))-(C2*A(IC+I)+S2*B(IC+I)))
      B3=SIN60*((C1*B(IB+I)-S1*A(IB+I))-(C2*B(IC+I)-S2*A(IC+I)))
      C(JA+J)=A(IA+I)+A1
      D(JA+J)=B(IA+I)+B1
      C(JB+J)=A2+B3
      D(JB+J)=B2-A3
      C(JC+J)=A2-B3
      D(JC+J)=-(B2+A3)
      I=I+INC3
      J=J+INC4
  330 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  340 CONTINUE
      IBASE=IBASE+IJUMP
      JA=JA+JINK
      JB=JB+JINK
      JC=JC-JINK
  350 CONTINUE
      IF (JA.GT.JC) GO TO 900
  360 CONTINUE
      JBASE=0
      DO 380 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 370 IJK=1,LOT
      C(JA+J)=A(IA+I)+0.5*(A(IB+I)-A(IC+I))
      D(JA+J)=-SIN60*(A(IB+I)+A(IC+I))
      C(JB+J)=A(IA+I)-(A(IB+I)-A(IC+I))
      I=I+INC3
      J=J+INC4
  370 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  380 CONTINUE
      GO TO 900
C
  390 CONTINUE
      Z=1.0/FLOAT(N)
      ZSIN60=Z*SIN60
      DO 394 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 392 IJK=1,LOT
      C(JA+J)=Z*(A(IA+I)+(A(IB+I)+A(IC+I)))
      C(JB+J)=Z*(A(IA+I)-0.5*(A(IB+I)+A(IC+I)))
      D(JB+J)=ZSIN60*(A(IC+I)-A(IB+I))
      I=I+INC3
      J=J+INC4
  392 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  394 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 4
C     -------------------
  400 CONTINUE
      IA=1
      IB=IA+IINK
      IC=IB+IINK
      ID=IC+IINK
      JA=1
      JB=JA+(2*M-LA)*INC2
      JC=JB+2*M*INC2
      JD=JB
C
      IF (LA.EQ.M) GO TO 490
C
      DO 420 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 410 IJK=1,LOT
      C(JA+J)=(A(IA+I)+A(IC+I))+(A(IB+I)+A(ID+I))
      C(JC+J)=(A(IA+I)+A(IC+I))-(A(IB+I)+A(ID+I))
      C(JB+J)=A(IA+I)-A(IC+I)
      D(JB+J)=A(ID+I)-A(IB+I)
      I=I+INC3
      J=J+INC4
  410 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  420 CONTINUE
      JA=JA+JINK
      JINK=2*JINK
      JB=JB+JINK
      JC=JC-JINK
      JD=JD-JINK
      IBASE=IBASE+IJUMP
      IJUMP=2*IJUMP+IINK
      IF (JB.EQ.JC) GO TO 460
      DO 450 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      KD=KC+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      C3=TRIGS(KD+1)
      S3=TRIGS(KD+2)
      JBASE=0
      DO 440 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 430 IJK=1,LOT
      A0=A(IA+I)+(C2*A(IC+I)+S2*B(IC+I))
      A2=A(IA+I)-(C2*A(IC+I)+S2*B(IC+I))
      A1=(C1*A(IB+I)+S1*B(IB+I))+(C3*A(ID+I)+S3*B(ID+I))
      A3=(C1*A(IB+I)+S1*B(IB+I))-(C3*A(ID+I)+S3*B(ID+I))
      B0=B(IA+I)+(C2*B(IC+I)-S2*A(IC+I))
      B2=B(IA+I)-(C2*B(IC+I)-S2*A(IC+I))
      B1=(C1*B(IB+I)-S1*A(IB+I))+(C3*B(ID+I)-S3*A(ID+I))
      B3=(C1*B(IB+I)-S1*A(IB+I))-(C3*B(ID+I)-S3*A(ID+I))
      C(JA+J)=A0+A1
      C(JC+J)=A0-A1
      D(JA+J)=B0+B1
      D(JC+J)=B1-B0
      C(JB+J)=A2+B3
      C(JD+J)=A2-B3
      D(JB+J)=B2-A3
      D(JD+J)=-(B2+A3)
      I=I+INC3
      J=J+INC4
  430 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  440 CONTINUE
      IBASE=IBASE+IJUMP
      JA=JA+JINK
      JB=JB+JINK
      JC=JC-JINK
      JD=JD-JINK
  450 CONTINUE
      IF (JB.GT.JC) GO TO 900
  460 CONTINUE
      SIN45=SQRT(0.5)
      JBASE=0
      DO 480 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 470 IJK=1,LOT
      C(JA+J)=A(IA+I)+SIN45*(A(IB+I)-A(ID+I))
      C(JB+J)=A(IA+I)-SIN45*(A(IB+I)-A(ID+I))
      D(JA+J)=-A(IC+I)-SIN45*(A(IB+I)+A(ID+I))
      D(JB+J)=A(IC+I)-SIN45*(A(IB+I)+A(ID+I))
      I=I+INC3
      J=J+INC4
  470 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  480 CONTINUE
      GO TO 900
C
  490 CONTINUE
      Z=1.0/FLOAT(N)
      DO 494 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 492 IJK=1,LOT
      C(JA+J)=Z*((A(IA+I)+A(IC+I))+(A(IB+I)+A(ID+I)))
      C(JC+J)=Z*((A(IA+I)+A(IC+I))-(A(IB+I)+A(ID+I)))
      C(JB+J)=Z*(A(IA+I)-A(IC+I))
      D(JB+J)=Z*(A(ID+I)-A(IB+I))
      I=I+INC3
      J=J+INC4
  492 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  494 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 5
C     -------------------
  500 CONTINUE
      IA=1
      IB=IA+IINK
      IC=IB+IINK
      ID=IC+IINK
      IE=ID+IINK
      JA=1
      JB=JA+(2*M-LA)*INC2
      JC=JB+2*M*INC2
      JD=JC
      JE=JB
C
      IF (LA.EQ.M) GO TO 590
C
      DO 520 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 510 IJK=1,LOT
      A1=A(IB+I)+A(IE+I)
      A3=A(IB+I)-A(IE+I)
      A2=A(IC+I)+A(ID+I)
      A4=A(IC+I)-A(ID+I)
      A5=A(IA+I)-0.25*(A1+A2)
      A6=QRT5*(A1-A2)
      C(JA+J)=A(IA+I)+(A1+A2)
      C(JB+J)=A5+A6
      C(JC+J)=A5-A6
      D(JB+J)=-SIN72*A3-SIN36*A4
      D(JC+J)=-SIN36*A3+SIN72*A4
      I=I+INC3
      J=J+INC4
  510 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  520 CONTINUE
      JA=JA+JINK
      JINK=2*JINK
      JB=JB+JINK
      JC=JC+JINK
      JD=JD-JINK
      JE=JE-JINK
      IBASE=IBASE+IJUMP
      IJUMP=2*IJUMP+IINK
      IF (JB.EQ.JD) GO TO 560
      DO 550 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      KD=KC+KB
      KE=KD+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      C3=TRIGS(KD+1)
      S3=TRIGS(KD+2)
      C4=TRIGS(KE+1)
      S4=TRIGS(KE+2)
      JBASE=0
      DO 540 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 530 IJK=1,LOT
      A1=(C1*A(IB+I)+S1*B(IB+I))+(C4*A(IE+I)+S4*B(IE+I))
      A3=(C1*A(IB+I)+S1*B(IB+I))-(C4*A(IE+I)+S4*B(IE+I))
      A2=(C2*A(IC+I)+S2*B(IC+I))+(C3*A(ID+I)+S3*B(ID+I))
      A4=(C2*A(IC+I)+S2*B(IC+I))-(C3*A(ID+I)+S3*B(ID+I))
      B1=(C1*B(IB+I)-S1*A(IB+I))+(C4*B(IE+I)-S4*A(IE+I))
      B3=(C1*B(IB+I)-S1*A(IB+I))-(C4*B(IE+I)-S4*A(IE+I))
      B2=(C2*B(IC+I)-S2*A(IC+I))+(C3*B(ID+I)-S3*A(ID+I))
      B4=(C2*B(IC+I)-S2*A(IC+I))-(C3*B(ID+I)-S3*A(ID+I))
      A5=A(IA+I)-0.25*(A1+A2)
      A6=QRT5*(A1-A2)
      B5=B(IA+I)-0.25*(B1+B2)
      B6=QRT5*(B1-B2)
      A10=A5+A6
      A20=A5-A6
      B10=B5+B6
      B20=B5-B6
      A11=SIN72*B3+SIN36*B4
      A21=SIN36*B3-SIN72*B4
      B11=SIN72*A3+SIN36*A4
      B21=SIN36*A3-SIN72*A4
      C(JA+J)=A(IA+I)+(A1+A2)
      C(JB+J)=A10+A11
      C(JE+J)=A10-A11
      C(JC+J)=A20+A21
      C(JD+J)=A20-A21
      D(JA+J)=B(IA+I)+(B1+B2)
      D(JB+J)=B10-B11
      D(JE+J)=-(B10+B11)
      D(JC+J)=B20-B21
      D(JD+J)=-(B20+B21)
      I=I+INC3
      J=J+INC4
  530 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  540 CONTINUE
      IBASE=IBASE+IJUMP
      JA=JA+JINK
      JB=JB+JINK
      JC=JC+JINK
      JD=JD-JINK
      JE=JE-JINK
  550 CONTINUE
      IF (JB.GT.JD) GO TO 900
  560 CONTINUE
      JBASE=0
      DO 580 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 570 IJK=1,LOT
      A1=A(IB+I)+A(IE+I)
      A3=A(IB+I)-A(IE+I)
      A2=A(IC+I)+A(ID+I)
      A4=A(IC+I)-A(ID+I)
      A5=A(IA+I)+0.25*(A3-A4)
      A6=QRT5*(A3+A4)
      C(JA+J)=A5+A6
      C(JB+J)=A5-A6
      C(JC+J)=A(IA+I)-(A3-A4)
      D(JA+J)=-SIN36*A1-SIN72*A2
      D(JB+J)=-SIN72*A1+SIN36*A2
      I=I+INC3
      J=J+INC4
  570 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  580 CONTINUE
      GO TO 900
C
  590 CONTINUE
      Z=1.0/FLOAT(N)
      ZQRT5=Z*QRT5
      ZSIN36=Z*SIN36
      ZSIN72=Z*SIN72
      DO 594 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 592 IJK=1,LOT
      A1=A(IB+I)+A(IE+I)
      A3=A(IB+I)-A(IE+I)
      A2=A(IC+I)+A(ID+I)
      A4=A(IC+I)-A(ID+I)
      A5=Z*(A(IA+I)-0.25*(A1+A2))
      A6=ZQRT5*(A1-A2)
      C(JA+J)=Z*(A(IA+I)+(A1+A2))
      C(JB+J)=A5+A6
      C(JC+J)=A5-A6
      D(JB+J)=-ZSIN72*A3-ZSIN36*A4
      D(JC+J)=-ZSIN36*A3+ZSIN72*A4
      I=I+INC3
      J=J+INC4
  592 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  594 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 6
C     -------------------
  600 CONTINUE
      IA=1
      IB=IA+IINK
      IC=IB+IINK
      ID=IC+IINK
      IE=ID+IINK
      IF=IE+IINK
      JA=1
      JB=JA+(2*M-LA)*INC2
      JC=JB+2*M*INC2
      JD=JC+2*M*INC2
      JE=JC
      JF=JB
C
      IF (LA.EQ.M) GO TO 690
C
      DO 620 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 610 IJK=1,LOT
      A11=(A(IC+I)+A(IF+I))+(A(IB+I)+A(IE+I))
      C(JA+J)=(A(IA+I)+A(ID+I))+A11
      C(JC+J)=(A(IA+I)+A(ID+I)-0.5*A11)
      D(JC+J)=SIN60*((A(IC+I)+A(IF+I))-(A(IB+I)+A(IE+I)))
      A11=(A(IC+I)-A(IF+I))+(A(IE+I)-A(IB+I))
      C(JB+J)=(A(IA+I)-A(ID+I))-0.5*A11
      D(JB+J)=SIN60*((A(IE+I)-A(IB+I))-(A(IC+I)-A(IF+I)))
      C(JD+J)=(A(IA+I)-A(ID+I))+A11
      I=I+INC3
      J=J+INC4
  610 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  620 CONTINUE
      JA=JA+JINK
      JINK=2*JINK
      JB=JB+JINK
      JC=JC+JINK
      JD=JD-JINK
      JE=JE-JINK
      JF=JF-JINK
      IBASE=IBASE+IJUMP
      IJUMP=2*IJUMP+IINK
      IF (JC.EQ.JD) GO TO 660
      DO 650 K=LA,KSTOP,LA
      KB=K+K
      KC=KB+KB
      KD=KC+KB
      KE=KD+KB
      KF=KE+KB
      C1=TRIGS(KB+1)
      S1=TRIGS(KB+2)
      C2=TRIGS(KC+1)
      S2=TRIGS(KC+2)
      C3=TRIGS(KD+1)
      S3=TRIGS(KD+2)
      C4=TRIGS(KE+1)
      S4=TRIGS(KE+2)
      C5=TRIGS(KF+1)
      S5=TRIGS(KF+2)
      JBASE=0
      DO 640 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 630 IJK=1,LOT
      A1=C1*A(IB+I)+S1*B(IB+I)
      B1=C1*B(IB+I)-S1*A(IB+I)
      A2=C2*A(IC+I)+S2*B(IC+I)
      B2=C2*B(IC+I)-S2*A(IC+I)
      A3=C3*A(ID+I)+S3*B(ID+I)
      B3=C3*B(ID+I)-S3*A(ID+I)
      A4=C4*A(IE+I)+S4*B(IE+I)
      B4=C4*B(IE+I)-S4*A(IE+I)
      A5=C5*A(IF+I)+S5*B(IF+I)
      B5=C5*B(IF+I)-S5*A(IF+I)
      A11=(A2+A5)+(A1+A4)
      A20=(A(IA+I)+A3)-0.5*A11
      A21=SIN60*((A2+A5)-(A1+A4))
      B11=(B2+B5)+(B1+B4)
      B20=(B(IA+I)+B3)-0.5*B11
      B21=SIN60*((B2+B5)-(B1+B4))
      C(JA+J)=(A(IA+I)+A3)+A11
      D(JA+J)=(B(IA+I)+B3)+B11
      C(JC+J)=A20-B21
      D(JC+J)=A21+B20
      C(JE+J)=A20+B21
      D(JE+J)=A21-B20
      A11=(A2-A5)+(A4-A1)
      A20=(A(IA+I)-A3)-0.5*A11
      A21=SIN60*((A4-A1)-(A2-A5))
      B11=(B5-B2)-(B4-B1)
      B20=(B3-B(IA+I))-0.5*B11
      B21=SIN60*((B5-B2)+(B4-B1))
      C(JB+J)=A20-B21
      D(JB+J)=A21-B20
      C(JD+J)=A11+(A(IA+I)-A3)
      D(JD+J)=B11+(B3-B(IA+I))
      C(JF+J)=A20+B21
      D(JF+J)=A21+B20
      I=I+INC3
      J=J+INC4
  630 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  640 CONTINUE
      IBASE=IBASE+IJUMP
      JA=JA+JINK
      JB=JB+JINK
      JC=JC+JINK
      JD=JD-JINK
      JE=JE-JINK
      JF=JF-JINK
  650 CONTINUE
      IF (JC.GT.JD) GO TO 900
  660 CONTINUE
      JBASE=0
      DO 680 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 670 IJK=1,LOT
      C(JA+J)=(A(IA+I)+0.5*(A(IC+I)-A(IE+I)))+ SIN60*(A(IB+I)-A(IF+I))
      D(JA+J)=-(A(ID+I)+0.5*(A(IB+I)+A(IF+I)))-SIN60*(A(IC+I)+A(IE+I))
      C(JB+J)=A(IA+I)-(A(IC+I)-A(IE+I))
      D(JB+J)=A(ID+I)-(A(IB+I)+A(IF+I))
      C(JC+J)=(A(IA+I)+0.5*(A(IC+I)-A(IE+I)))-SIN60*(A(IB+I)-A(IF+I))
      D(JC+J)=-(A(ID+I)+0.5*(A(IB+I)+A(IF+I)))+SIN60*(A(IC+I)+A(IE+I))
      I=I+INC3
      J=J+INC4
  670 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  680 CONTINUE
      GO TO 900
C
  690 CONTINUE
      Z=1.0/FLOAT(N)
      ZSIN60=Z*SIN60
      DO 694 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 692 IJK=1,LOT
      A11=(A(IC+I)+A(IF+I))+(A(IB+I)+A(IE+I))
      C(JA+J)=Z*((A(IA+I)+A(ID+I))+A11)
      C(JC+J)=Z*((A(IA+I)+A(ID+I))-0.5*A11)
      D(JC+J)=ZSIN60*((A(IC+I)+A(IF+I))-(A(IB+I)+A(IE+I)))
      A11=(A(IC+I)-A(IF+I))+(A(IE+I)-A(IB+I))
      C(JB+J)=Z*((A(IA+I)-A(ID+I))-0.5*A11)
      D(JB+J)=ZSIN60*((A(IE+I)-A(IB+I))-(A(IC+I)-A(IF+I)))
      C(JD+J)=Z*((A(IA+I)-A(ID+I))+A11)
      I=I+INC3
      J=J+INC4
  692 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  694 CONTINUE
      GO TO 900
C
C     CODING FOR FACTOR 8
C     -------------------
  800 CONTINUE
      IBAD=3
      IF (LA.NE.M) GO TO 910
      IA=1
      IB=IA+IINK
      IC=IB+IINK
      ID=IC+IINK
      IE=ID+IINK
      IF=IE+IINK
      IG=IF+IINK
      IH=IG+IINK
      JA=1
      JB=JA+LA*INC2
      JC=JB+2*M*INC2
      JD=JC+2*M*INC2
      JE=JD+2*M*INC2
      Z=1.0/FLOAT(N)
      ZSIN45=Z*SQRT(0.5)
C
      DO 820 L=1,LA
      I=IBASE
      J=JBASE
CDIR$ IVDEP
      DO 810 IJK=1,LOT
      C(JA+J)=Z*(((A(IA+I)+A(IE+I))+(A(IC+I)+A(IG+I)))+
     *    ((A(ID+I)+A(IH+I))+(A(IB+I)+A(IF+I))))
      C(JE+J)=Z*(((A(IA+I)+A(IE+I))+(A(IC+I)+A(IG+I)))-
     *    ((A(ID+I)+A(IH+I))+(A(IB+I)+A(IF+I))))
      C(JC+J)=Z*((A(IA+I)+A(IE+I))-(A(IC+I)+A(IG+I)))
      D(JC+J)=Z*((A(ID+I)+A(IH+I))-(A(IB+I)+A(IF+I)))
      C(JB+J)=Z*(A(IA+I)-A(IE+I))
     *    +ZSIN45*((A(IH+I)-A(ID+I))-(A(IF+I)-A(IB+I)))
      C(JD+J)=Z*(A(IA+I)-A(IE+I))
     *    -ZSIN45*((A(IH+I)-A(ID+I))-(A(IF+I)-A(IB+I)))
      D(JB+J)=ZSIN45*((A(IH+I)-A(ID+I))+(A(IF+I)-A(IB+I)))
     *    +Z*(A(IG+I)-A(IC+I))
      D(JD+J)=ZSIN45*((A(IH+I)-A(ID+I))+(A(IF+I)-A(IB+I)))
     *    -Z*(A(IG+I)-A(IC+I))
      I=I+INC3
      J=J+INC4
  810 CONTINUE
      IBASE=IBASE+INC1
      JBASE=JBASE+INC2
  820 CONTINUE
C
C     RETURN
C     ------
  900 CONTINUE
      IBAD=0
  910 CONTINUE
      IERR=IBAD
      RETURN
      END
*deck ssum
      FUNCTION SSUM(N,X,INC)
      REAL X(*)
      SSUM=0.
      DO 10 I=1,N,INC
 10   SSUM=SSUM+X(I)
      SSUM=SSUM/REAL(N)
      END
